/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
var weavo;
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/vast-client/src/ad.js":
/*!********************************************!*\
  !*** ./node_modules/vast-client/src/ad.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAd\": () => (/* binding */ createAd)\n/* harmony export */ });\nfunction createAd(adAttributes = {}) {\n  return {\n    id: adAttributes.id || null,\n    sequence: adAttributes.sequence || null,\n    adType: adAttributes.adType || null,\n    adServingId: null,\n    categories: [],\n    expires: null,\n    viewableImpression: {},\n    system: null,\n    title: null,\n    description: null,\n    advertiser: null,\n    pricing: null,\n    survey: null, // @deprecated in VAST 4.1\n    errorURLTemplates: [],\n    impressionURLTemplates: [],\n    creatives: [],\n    extensions: [],\n    adVerifications: [],\n    blockedAdCategories: [],\n    followAdditionalWrappers: true,\n    allowMultipleAds: false,\n    fallbackOnNoAd: null\n  };\n}\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/ad.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/ad_verification.js":
/*!*********************************************************!*\
  !*** ./node_modules/vast-client/src/ad_verification.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAdVerification\": () => (/* binding */ createAdVerification)\n/* harmony export */ });\nfunction createAdVerification() {\n  return {\n    resource: null,\n    vendor: null,\n    browserOptional: false,\n    apiFramework: null,\n    type: null,\n    parameters: null,\n    trackingEvents: {}\n  };\n}\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/ad_verification.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/closed_caption_file.js":
/*!*************************************************************!*\
  !*** ./node_modules/vast-client/src/closed_caption_file.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createClosedCaptionFile\": () => (/* binding */ createClosedCaptionFile)\n/* harmony export */ });\nfunction createClosedCaptionFile(closedCaptionAttributes = {}) {\n  return {\n    type: closedCaptionAttributes.type || null,\n    language: closedCaptionAttributes.language || null,\n    fileURL: null\n  };\n}\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/closed_caption_file.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/companion_ad.js":
/*!******************************************************!*\
  !*** ./node_modules/vast-client/src/companion_ad.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCompanionAd\": () => (/* binding */ createCompanionAd),\n/* harmony export */   \"isCompanionAd\": () => (/* binding */ isCompanionAd)\n/* harmony export */ });\nfunction createCompanionAd(creativeAttributes = {}) {\n  return {\n    id: creativeAttributes.id || null,\n    adType: 'companionAd',\n    width: creativeAttributes.width || 0,\n    height: creativeAttributes.height || 0,\n    assetWidth: creativeAttributes.assetWidth || null,\n    assetHeight: creativeAttributes.assetHeight || null,\n    expandedWidth: creativeAttributes.expandedWidth || null,\n    expandedHeight: creativeAttributes.expandedHeight || null,\n    apiFramework: creativeAttributes.apiFramework || null,\n    adSlotID: creativeAttributes.adSlotID || null,\n    pxratio: creativeAttributes.pxratio || '1',\n    renderingMode: creativeAttributes.renderingMode || 'default',\n    staticResources: [],\n    htmlResources: [],\n    iframeResources: [],\n    adParameters: null,\n    xmlEncoded: null,\n    altText: null,\n    companionClickThroughURLTemplate: null,\n    companionClickTrackingURLTemplates: [],\n    trackingEvents: {}\n  };\n}\n\nfunction isCompanionAd(ad) {\n  return ad.adType === 'companionAd';\n}\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/companion_ad.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/creative/creative.js":
/*!***********************************************************!*\
  !*** ./node_modules/vast-client/src/creative/creative.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCreative\": () => (/* binding */ createCreative)\n/* harmony export */ });\nfunction createCreative(creativeAttributes = {}) {\n  return {\n    id: creativeAttributes.id || null,\n    adId: creativeAttributes.adId || null,\n    sequence: creativeAttributes.sequence || null,\n    apiFramework: creativeAttributes.apiFramework || null,\n    universalAdId: { value: null, idRegistry: 'unknown' },\n    creativeExtensions: []\n  };\n}\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/creative/creative.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/creative/creative_companion.js":
/*!*********************************************************************!*\
  !*** ./node_modules/vast-client/src/creative/creative_companion.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCreativeCompanion\": () => (/* binding */ createCreativeCompanion)\n/* harmony export */ });\n/* harmony import */ var _creative__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./creative */ \"./node_modules/vast-client/src/creative/creative.js\");\n\n\nfunction createCreativeCompanion(creativeAttributes = {}) {\n  const { id, adId, sequence, apiFramework } = (0,_creative__WEBPACK_IMPORTED_MODULE_0__.createCreative)(\n    creativeAttributes\n  );\n  return {\n    id,\n    adId,\n    sequence,\n    apiFramework,\n    type: 'companion',\n    required: null,\n    variations: []\n  };\n}\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/creative/creative_companion.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/creative/creative_linear.js":
/*!******************************************************************!*\
  !*** ./node_modules/vast-client/src/creative/creative_linear.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCreativeLinear\": () => (/* binding */ createCreativeLinear),\n/* harmony export */   \"isCreativeLinear\": () => (/* binding */ isCreativeLinear)\n/* harmony export */ });\n/* harmony import */ var _creative__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./creative */ \"./node_modules/vast-client/src/creative/creative.js\");\n\n\nfunction createCreativeLinear(creativeAttributes = {}) {\n  const { id, adId, sequence, apiFramework } = (0,_creative__WEBPACK_IMPORTED_MODULE_0__.createCreative)(\n    creativeAttributes\n  );\n  return {\n    id,\n    adId,\n    sequence,\n    apiFramework,\n    type: 'linear',\n    duration: 0,\n    skipDelay: null,\n    mediaFiles: [],\n    mezzanine: null,\n    interactiveCreativeFile: null,\n    closedCaptionFiles: [],\n    videoClickThroughURLTemplate: null,\n    videoClickTrackingURLTemplates: [],\n    videoCustomClickURLTemplates: [],\n    adParameters: null,\n    icons: [],\n    trackingEvents: {}\n  };\n}\n\nfunction isCreativeLinear(ad) {\n  return ad.type === 'linear';\n}\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/creative/creative_linear.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/creative/creative_non_linear.js":
/*!**********************************************************************!*\
  !*** ./node_modules/vast-client/src/creative/creative_non_linear.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCreativeNonLinear\": () => (/* binding */ createCreativeNonLinear)\n/* harmony export */ });\n/* harmony import */ var _creative__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./creative */ \"./node_modules/vast-client/src/creative/creative.js\");\n\n\nfunction createCreativeNonLinear(creativeAttributes = {}) {\n  const { id, adId, sequence, apiFramework } = (0,_creative__WEBPACK_IMPORTED_MODULE_0__.createCreative)(\n    creativeAttributes\n  );\n  return {\n    id,\n    adId,\n    sequence,\n    apiFramework,\n    type: 'nonlinear',\n    variations: [],\n    trackingEvents: {}\n  };\n}\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/creative/creative_non_linear.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/extension.js":
/*!***************************************************!*\
  !*** ./node_modules/vast-client/src/extension.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createExtension\": () => (/* binding */ createExtension),\n/* harmony export */   \"isEmptyExtension\": () => (/* binding */ isEmptyExtension)\n/* harmony export */ });\nfunction createExtension() {\n  return {\n    name: null,\n    value: null,\n    attributes: {},\n    children: []\n  };\n}\n\nfunction isEmptyExtension(extension) {\n  return (\n    extension.value === null &&\n    Object.keys(extension.attributes).length === 0 &&\n    extension.children.length === 0\n  );\n}\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/extension.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/icon.js":
/*!**********************************************!*\
  !*** ./node_modules/vast-client/src/icon.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createIcon\": () => (/* binding */ createIcon)\n/* harmony export */ });\nfunction createIcon() {\n  return {\n    program: null,\n    height: 0,\n    width: 0,\n    xPosition: 0,\n    yPosition: 0,\n    apiFramework: null,\n    offset: null,\n    duration: 0,\n    type: null,\n    staticResource: null,\n    htmlResource: null,\n    iframeResource: null,\n    pxratio: '1',\n    iconClickThroughURLTemplate: null,\n    iconClickTrackingURLTemplates: [],\n    iconViewTrackingURLTemplate: null\n  };\n}\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/icon.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/index.js":
/*!***********************************************!*\
  !*** ./node_modules/vast-client/src/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"VASTClient\": () => (/* reexport safe */ _vast_client_js__WEBPACK_IMPORTED_MODULE_1__.VASTClient),\n/* harmony export */   \"VASTParser\": () => (/* reexport safe */ _parser_vast_parser_js__WEBPACK_IMPORTED_MODULE_0__.VASTParser),\n/* harmony export */   \"VASTTracker\": () => (/* reexport safe */ _vast_tracker_js__WEBPACK_IMPORTED_MODULE_2__.VASTTracker)\n/* harmony export */ });\n/* harmony import */ var _parser_vast_parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parser/vast_parser.js */ \"./node_modules/vast-client/src/parser/vast_parser.js\");\n/* harmony import */ var _vast_client_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vast_client.js */ \"./node_modules/vast-client/src/vast_client.js\");\n/* harmony import */ var _vast_tracker_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vast_tracker.js */ \"./node_modules/vast-client/src/vast_tracker.js\");\n\n\n\n\n\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/index.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/interactive_creative_file.js":
/*!*******************************************************************!*\
  !*** ./node_modules/vast-client/src/interactive_creative_file.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createInteractiveCreativeFile\": () => (/* binding */ createInteractiveCreativeFile)\n/* harmony export */ });\n/* harmony import */ var _parser_parser_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parser/parser_utils */ \"./node_modules/vast-client/src/parser/parser_utils.js\");\n\n\nfunction createInteractiveCreativeFile(\n  interactiveCreativeAttributes = {}\n) {\n  return {\n    type: interactiveCreativeAttributes.type || null,\n    apiFramework: interactiveCreativeAttributes.apiFramework || null,\n    variableDuration: _parser_parser_utils__WEBPACK_IMPORTED_MODULE_0__.parserUtils.parseBoolean(\n      interactiveCreativeAttributes.variableDuration\n    ),\n    fileURL: null\n  };\n}\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/interactive_creative_file.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/media_file.js":
/*!****************************************************!*\
  !*** ./node_modules/vast-client/src/media_file.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createMediaFile\": () => (/* binding */ createMediaFile)\n/* harmony export */ });\nfunction createMediaFile() {\n  return {\n    id: null,\n    fileURL: null,\n    fileSize: 0,\n    deliveryType: 'progressive',\n    mimeType: null,\n    mediaType: null,\n    codec: null,\n    bitrate: 0,\n    minBitrate: 0,\n    maxBitrate: 0,\n    width: 0,\n    height: 0,\n    apiFramework: null, // @deprecated in VAST 4.1. <InteractiveCreativeFile> should be used instead.\n    scalable: null,\n    maintainAspectRatio: null\n  };\n}\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/media_file.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/mezzanine.js":
/*!***************************************************!*\
  !*** ./node_modules/vast-client/src/mezzanine.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createMezzanine\": () => (/* binding */ createMezzanine)\n/* harmony export */ });\nfunction createMezzanine() {\n  return {\n    id: null,\n    fileURL: null,\n    delivery: null,\n    codec: null,\n    type: null,\n    width: 0,\n    height: 0,\n    fileSize: 0,\n    mediaType: '2D'\n  };\n}\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/mezzanine.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/non_linear_ad.js":
/*!*******************************************************!*\
  !*** ./node_modules/vast-client/src/non_linear_ad.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createNonLinearAd\": () => (/* binding */ createNonLinearAd),\n/* harmony export */   \"isNonLinearAd\": () => (/* binding */ isNonLinearAd)\n/* harmony export */ });\nfunction createNonLinearAd() {\n  return {\n    id: null,\n    width: 0,\n    height: 0,\n    expandedWidth: 0,\n    expandedHeight: 0,\n    scalable: true,\n    maintainAspectRatio: true,\n    minSuggestedDuration: 0,\n    apiFramework: 'static',\n    adType: 'nonLinearAd',\n    type: null,\n    staticResource: null,\n    htmlResource: null,\n    iframeResource: null,\n    nonlinearClickThroughURLTemplate: null,\n    nonlinearClickTrackingURLTemplates: [],\n    adParameters: null\n  };\n}\n\nfunction isNonLinearAd(ad) {\n  return ad.adType === 'nonLinearAd';\n}\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/non_linear_ad.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/parser/ad_parser.js":
/*!**********************************************************!*\
  !*** ./node_modules/vast-client/src/parser/ad_parser.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parseAd\": () => (/* binding */ parseAd),\n/* harmony export */   \"_parseAdVerifications\": () => (/* binding */ _parseAdVerifications),\n/* harmony export */   \"_parseAdVerificationsFromExtensions\": () => (/* binding */ _parseAdVerificationsFromExtensions),\n/* harmony export */   \"_parseViewableImpression\": () => (/* binding */ _parseViewableImpression)\n/* harmony export */ });\n/* harmony import */ var _ad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ad */ \"./node_modules/vast-client/src/ad.js\");\n/* harmony import */ var _ad_verification__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ad_verification */ \"./node_modules/vast-client/src/ad_verification.js\");\n/* harmony import */ var _creatives_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./creatives_parser */ \"./node_modules/vast-client/src/parser/creatives_parser.js\");\n/* harmony import */ var _extensions_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./extensions_parser */ \"./node_modules/vast-client/src/parser/extensions_parser.js\");\n/* harmony import */ var _parser_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./parser_utils */ \"./node_modules/vast-client/src/parser/parser_utils.js\");\n/* harmony import */ var _parser_verification__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./parser_verification */ \"./node_modules/vast-client/src/parser/parser_verification.js\");\n\n\n\n\n\n\n\n/**\n * This module provides methods to parse a VAST Ad Element.\n */\n\n/**\n * Parses an Ad element (can either be a Wrapper or an InLine).\n * @param  {Object} adElement - The VAST Ad element to parse.\n * @param  {Function} emit - Emit function used to trigger Warning event\n * @param  {Object} options - An optional Object of parameters to be used in the parsing process.\n * @emits  VASTParser#VAST-warning\n * @return {Object|undefined} - Object containing the ad and if it is wrapper/inline\n */\nfunction parseAd(\n  adElement,\n  emit,\n  { allowMultipleAds, followAdditionalWrappers } = {}\n) {\n  const childNodes = adElement.childNodes;\n\n  for (const adTypeElementKey in childNodes) {\n    const adTypeElement = childNodes[adTypeElementKey];\n\n    if (['Wrapper', 'InLine'].indexOf(adTypeElement.nodeName) === -1) {\n      continue;\n    }\n\n    if (\n      adTypeElement.nodeName === 'Wrapper' &&\n      followAdditionalWrappers === false\n    ) {\n      continue;\n    }\n\n    _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.copyNodeAttribute('id', adElement, adTypeElement);\n    _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.copyNodeAttribute('sequence', adElement, adTypeElement);\n    _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.copyNodeAttribute('adType', adElement, adTypeElement);\n    if (adTypeElement.nodeName === 'Wrapper') {\n      return { ad: parseWrapper(adTypeElement, emit), type: 'WRAPPER' };\n    } else if (adTypeElement.nodeName === 'InLine') {\n      return {\n        ad: parseInLine(adTypeElement, emit, { allowMultipleAds }),\n        type: 'INLINE',\n      };\n    }\n  }\n}\n\n/**\n * Parses an Inline\n * @param  {Object} adElement Element - The VAST Inline element to parse.\n * @param  {Function} emit - Emit function used to trigger Warning event.\n * @param  {Object} options - An optional Object of parameters to be used in the parsing process.\n * @emits  VASTParser#VAST-warning\n * @return {Object} ad - The ad object.\n */\nfunction parseInLine(adElement, emit, { allowMultipleAds } = {}) {\n  // if allowMultipleAds is set to false by wrapper attribute\n  // only the first stand-alone Ad (with no sequence values) in the\n  // requested VAST response is allowed so we won't parse ads with sequence\n  if (allowMultipleAds === false && adElement.getAttribute('sequence')) {\n    return null;\n  }\n\n  return parseAdElement(adElement, emit);\n}\n\n/**\n * Parses an ad type (Inline or Wrapper)\n * @param  {Object} adTypeElement - The VAST Inline or Wrapper element to parse.\n * @param  {Function} emit - Emit function used to trigger Warning event.\n * @emits  VASTParser#VAST-warning\n * @return {Object} ad - The ad object.\n */\nfunction parseAdElement(adTypeElement, emit) {\n  let adVerificationsFromExtensions = [];\n  if (emit) {\n    _parser_verification__WEBPACK_IMPORTED_MODULE_5__.parserVerification.verifyRequiredValues(adTypeElement, emit);\n  }\n\n  const childNodes = adTypeElement.childNodes;\n  const ad = (0,_ad__WEBPACK_IMPORTED_MODULE_0__.createAd)(_parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.parseAttributes(adTypeElement));\n\n  for (const nodeKey in childNodes) {\n    const node = childNodes[nodeKey];\n    switch (node.nodeName) {\n      case 'Error':\n        ad.errorURLTemplates.push(_parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.parseNodeText(node));\n        break;\n\n      case 'Impression':\n        ad.impressionURLTemplates.push({\n          id: node.getAttribute('id') || null,\n          url: _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.parseNodeText(node),\n        });\n        break;\n\n      case 'Creatives':\n        ad.creatives = (0,_creatives_parser__WEBPACK_IMPORTED_MODULE_2__.parseCreatives)(\n          _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.childrenByName(node, 'Creative')\n        );\n        break;\n\n      case 'Extensions': {\n        const extNodes = _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.childrenByName(node, 'Extension');\n        ad.extensions = (0,_extensions_parser__WEBPACK_IMPORTED_MODULE_3__.parseExtensions)(extNodes);\n\n        /*\n          OMID specify adVerifications should be in extensions for VAST < 4.0\n          To avoid to put them on two different places in two different format we reparse it\n          from extensions the same way than for an AdVerifications node.\n        */\n        if (!ad.adVerifications.length) {\n          adVerificationsFromExtensions = _parseAdVerificationsFromExtensions(\n            extNodes\n          );\n        }\n        break;\n      }\n      case 'AdVerifications':\n        ad.adVerifications = _parseAdVerifications(\n          _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.childrenByName(node, 'Verification')\n        );\n        break;\n\n      case 'AdSystem':\n        ad.system = {\n          value: _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.parseNodeText(node),\n          version: node.getAttribute('version') || null,\n        };\n        break;\n\n      case 'AdTitle':\n        ad.title = _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.parseNodeText(node);\n        break;\n\n      case 'AdServingId':\n        ad.adServingId = _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.parseNodeText(node);\n        break;\n\n      case 'Category':\n        ad.categories.push({\n          authority: node.getAttribute('authority') || null,\n          value: _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.parseNodeText(node),\n        });\n        break;\n\n      case 'Expires':\n        ad.expires = parseInt(_parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.parseNodeText(node), 10);\n        break;\n\n      case 'ViewableImpression':\n        ad.viewableImpression = _parseViewableImpression(node);\n        break;\n\n      case 'Description':\n        ad.description = _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.parseNodeText(node);\n        break;\n\n      case 'Advertiser':\n        ad.advertiser = {\n          id: node.getAttribute('id') || null,\n          value: _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.parseNodeText(node),\n        };\n        break;\n\n      case 'Pricing':\n        ad.pricing = {\n          value: _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.parseNodeText(node),\n          model: node.getAttribute('model') || null,\n          currency: node.getAttribute('currency') || null,\n        };\n        break;\n\n      case 'Survey':\n        ad.survey = _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.parseNodeText(node);\n        break;\n\n      case 'BlockedAdCategories':\n        ad.blockedAdCategories.push({\n          authority: node.getAttribute('authority') || null,\n          value: _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.parseNodeText(node),\n        });\n        break;\n    }\n  }\n\n  if (adVerificationsFromExtensions.length) {\n    ad.adVerifications = ad.adVerifications.concat(\n      adVerificationsFromExtensions\n    );\n  }\n  return ad;\n}\n\n/**\n * Parses a Wrapper element without resolving the wrapped urls.\n * @param  {Object} wrapperElement - The VAST Wrapper element to be parsed.\n * @param  {Function} emit - Emit function used to trigger Warning event.\n * @emits  VASTParser#VAST-warning\n * @return {Ad}\n */\nfunction parseWrapper(wrapperElement, emit) {\n  const ad = parseAdElement(wrapperElement, emit);\n\n  const followAdditionalWrappersValue = wrapperElement.getAttribute(\n    'followAdditionalWrappers'\n  );\n  const allowMultipleAdsValue = wrapperElement.getAttribute('allowMultipleAds');\n  const fallbackOnNoAdValue = wrapperElement.getAttribute('fallbackOnNoAd');\n  ad.followAdditionalWrappers = followAdditionalWrappersValue\n    ? _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.parseBoolean(followAdditionalWrappersValue)\n    : true;\n\n  ad.allowMultipleAds = allowMultipleAdsValue\n    ? _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.parseBoolean(allowMultipleAdsValue)\n    : false;\n\n  ad.fallbackOnNoAd = fallbackOnNoAdValue\n    ? _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.parseBoolean(fallbackOnNoAdValue)\n    : null;\n\n  let wrapperURLElement = _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.childByName(\n    wrapperElement,\n    'VASTAdTagURI'\n  );\n\n  if (wrapperURLElement) {\n    ad.nextWrapperURL = _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.parseNodeText(wrapperURLElement);\n  } else {\n    wrapperURLElement = _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.childByName(wrapperElement, 'VASTAdTagURL');\n\n    if (wrapperURLElement) {\n      ad.nextWrapperURL = _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.parseNodeText(\n        _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.childByName(wrapperURLElement, 'URL')\n      );\n    }\n  }\n\n  ad.creatives.forEach((wrapperCreativeElement) => {\n    if (['linear', 'nonlinear'].indexOf(wrapperCreativeElement.type) !== -1) {\n      // TrackingEvents Linear / NonLinear\n      if (wrapperCreativeElement.trackingEvents) {\n        if (!ad.trackingEvents) {\n          ad.trackingEvents = {};\n        }\n        if (!ad.trackingEvents[wrapperCreativeElement.type]) {\n          ad.trackingEvents[wrapperCreativeElement.type] = {};\n        }\n        for (const eventName in wrapperCreativeElement.trackingEvents) {\n          const urls = wrapperCreativeElement.trackingEvents[eventName];\n          if (\n            !Array.isArray(\n              ad.trackingEvents[wrapperCreativeElement.type][eventName]\n            )\n          ) {\n            ad.trackingEvents[wrapperCreativeElement.type][eventName] = [];\n          }\n          urls.forEach((url) => {\n            ad.trackingEvents[wrapperCreativeElement.type][eventName].push(url);\n          });\n        }\n      }\n      // ClickTracking\n      if (wrapperCreativeElement.videoClickTrackingURLTemplates) {\n        if (!Array.isArray(ad.videoClickTrackingURLTemplates)) {\n          ad.videoClickTrackingURLTemplates = [];\n        } // tmp property to save wrapper tracking URLs until they are merged\n        wrapperCreativeElement.videoClickTrackingURLTemplates.forEach(\n          (item) => {\n            ad.videoClickTrackingURLTemplates.push(item);\n          }\n        );\n      }\n      // ClickThrough\n      if (wrapperCreativeElement.videoClickThroughURLTemplate) {\n        ad.videoClickThroughURLTemplate =\n          wrapperCreativeElement.videoClickThroughURLTemplate;\n      }\n      // CustomClick\n      if (wrapperCreativeElement.videoCustomClickURLTemplates) {\n        if (!Array.isArray(ad.videoCustomClickURLTemplates)) {\n          ad.videoCustomClickURLTemplates = [];\n        } // tmp property to save wrapper tracking URLs until they are merged\n        wrapperCreativeElement.videoCustomClickURLTemplates.forEach((item) => {\n          ad.videoCustomClickURLTemplates.push(item);\n        });\n      }\n    }\n  });\n\n  if (ad.nextWrapperURL) {\n    return ad;\n  }\n}\n\n/**\n * Parses the AdVerifications Element.\n * @param  {Array} verifications - The array of verifications to parse.\n * @return {Array<Object>}\n */\nfunction _parseAdVerifications(verifications) {\n  const ver = [];\n\n  verifications.forEach((verificationNode) => {\n    const verification = (0,_ad_verification__WEBPACK_IMPORTED_MODULE_1__.createAdVerification)();\n    const childNodes = verificationNode.childNodes;\n\n    _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.assignAttributes(verificationNode.attributes, verification);\n    for (const nodeKey in childNodes) {\n      const node = childNodes[nodeKey];\n\n      switch (node.nodeName) {\n        case 'JavaScriptResource':\n        case 'ExecutableResource':\n          verification.resource = _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.parseNodeText(node);\n          _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.assignAttributes(node.attributes, verification);\n          break;\n        case 'VerificationParameters':\n          verification.parameters = _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.parseNodeText(node);\n          break;\n      }\n    }\n\n    const trackingEventsElement = _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.childByName(\n      verificationNode,\n      'TrackingEvents'\n    );\n    if (trackingEventsElement) {\n      _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.childrenByName(trackingEventsElement, 'Tracking')\n        .forEach((trackingElement) => {\n          const eventName = trackingElement.getAttribute('event');\n          const trackingURLTemplate = _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.parseNodeText(\n            trackingElement\n          );\n          if (eventName && trackingURLTemplate) {\n            if (!Array.isArray(verification.trackingEvents[eventName])) {\n              verification.trackingEvents[eventName] = [];\n            }\n            verification.trackingEvents[eventName].push(trackingURLTemplate);\n          }\n        });\n    }\n\n    ver.push(verification);\n  });\n\n  return ver;\n}\n\n/**\n * Parses the AdVerifications Element from extension for versions < 4.0\n * @param  {Array<Node>} extensions - The array of extensions to parse.\n * @return {Array<Object>}\n */\nfunction _parseAdVerificationsFromExtensions(extensions) {\n  let adVerificationsNode = null,\n    adVerifications = [];\n\n  // Find the first (and only) AdVerifications node from extensions\n  extensions.some((extension) => {\n    return (adVerificationsNode = _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.childByName(\n      extension,\n      'AdVerifications'\n    ));\n  });\n\n  // Parse it if we get it\n  if (adVerificationsNode) {\n    adVerifications = _parseAdVerifications(\n      _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.childrenByName(adVerificationsNode, 'Verification')\n    );\n  }\n  return adVerifications;\n}\n\n/**\n * Parses the ViewableImpression Element.\n * @param  {Object} viewableImpressionNode - The ViewableImpression node element.\n * @return {Object} viewableImpression - The viewableImpression object\n */\nfunction _parseViewableImpression(viewableImpressionNode) {\n  const viewableImpression = {};\n  viewableImpression.id = viewableImpressionNode.getAttribute('id') || null;\n  const viewableImpressionChildNodes = viewableImpressionNode.childNodes;\n  for (const viewableImpressionElementKey in viewableImpressionChildNodes) {\n    const viewableImpressionElement =\n      viewableImpressionChildNodes[viewableImpressionElementKey];\n    const viewableImpressionNodeName = viewableImpressionElement.nodeName;\n    const viewableImpressionNodeValue = _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.parseNodeText(\n      viewableImpressionElement\n    );\n\n    if (\n      (viewableImpressionNodeName !== 'Viewable' &&\n        viewableImpressionNodeName !== 'NotViewable' &&\n        viewableImpressionNodeName !== 'ViewUndetermined') ||\n      !viewableImpressionNodeValue\n    ) {\n      continue;\n    } else {\n      const viewableImpressionNodeNameLower = viewableImpressionNodeName.toLowerCase();\n      if (!Array.isArray(viewableImpression[viewableImpressionNodeNameLower])) {\n        viewableImpression[viewableImpressionNodeNameLower] = [];\n      }\n      viewableImpression[viewableImpressionNodeNameLower].push(\n        viewableImpressionNodeValue\n      );\n    }\n  }\n\n  return viewableImpression;\n}\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/parser/ad_parser.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/parser/bitrate.js":
/*!********************************************************!*\
  !*** ./node_modules/vast-client/src/parser/bitrate.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"estimatedBitrate\": () => (/* binding */ estimatedBitrate),\n/* harmony export */   \"updateEstimatedBitrate\": () => (/* binding */ updateEstimatedBitrate)\n/* harmony export */ });\n/*\n  We decided to put the estimated bitrate separated from classes to persist it between different instances of vast client/parser\n*/\n\nlet estimatedBitrateCount = 0;\nlet estimatedBitrate = 0;\n\n/**\n * Calculate average estimated bitrate from the previous values and new entries\n * @param {Number} byteLength - The length of the response in bytes.\n * @param {Number} duration - The duration of the request in ms.\n */\nconst updateEstimatedBitrate = (byteLength, duration) => {\n  if (!byteLength || !duration || byteLength <= 0 || duration <= 0) {\n    return;\n  }\n\n  // We want the bitrate in kb/s, byteLength are in bytes and duration in ms, just need to convert the byteLength because kb/s = b/ms\n  const bitrate = (byteLength * 8) / duration;\n  estimatedBitrate = (estimatedBitrate * estimatedBitrateCount + bitrate) / ++estimatedBitrateCount\n}\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/parser/bitrate.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/parser/creative_companion_parser.js":
/*!**************************************************************************!*\
  !*** ./node_modules/vast-client/src/parser/creative_companion_parser.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parseCreativeCompanion\": () => (/* binding */ parseCreativeCompanion)\n/* harmony export */ });\n/* harmony import */ var _companion_ad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../companion_ad */ \"./node_modules/vast-client/src/companion_ad.js\");\n/* harmony import */ var _creative_creative_companion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../creative/creative_companion */ \"./node_modules/vast-client/src/creative/creative_companion.js\");\n/* harmony import */ var _parser_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./parser_utils */ \"./node_modules/vast-client/src/parser/parser_utils.js\");\n\n\n\n\n/**\n * This module provides methods to parse a VAST CompanionAd Element.\n */\n\n/**\n * Parses a CompanionAd.\n * @param  {Object} creativeElement - The VAST CompanionAd element to parse.\n * @param  {Object} creativeAttributes - The attributes of the CompanionAd (optional).\n * @return {Object} creative - The creative object.\n */\nfunction parseCreativeCompanion(creativeElement, creativeAttributes) {\n  const creative = (0,_creative_creative_companion__WEBPACK_IMPORTED_MODULE_1__.createCreativeCompanion)(creativeAttributes);\n  creative.required = creativeElement.getAttribute('required') || null;\n\n  creative.variations = _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.childrenByName(creativeElement, 'Companion')\n    .map(companionResource => {\n      const companionAd = (0,_companion_ad__WEBPACK_IMPORTED_MODULE_0__.createCompanionAd)(\n        _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.parseAttributes(companionResource)\n      );\n\n      companionAd.htmlResources = _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.childrenByName(companionResource, 'HTMLResource')\n        .reduce((urls, resource) => {\n          const url = _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.parseNodeText(resource);\n          return url ? urls.concat(url) : urls;\n        }, []);\n\n      companionAd.iframeResources = _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.childrenByName(companionResource, 'IFrameResource')\n        .reduce((urls, resource) => {\n          const url = _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.parseNodeText(resource);\n          return url ? urls.concat(url) : urls;\n        }, []);\n\n      companionAd.staticResources = _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.childrenByName(companionResource, 'StaticResource')\n        .reduce((urls, resource) => {\n          const url = _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.parseNodeText(resource);\n          return url\n            ? urls.concat({\n                url,\n                creativeType: resource.getAttribute('creativeType') || null\n              })\n            : urls;\n        }, []);\n\n      companionAd.altText =\n        _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.parseNodeText(\n          _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.childByName(companionResource, 'AltText')\n        ) || null;\n\n      const trackingEventsElement = _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.childByName(\n        companionResource,\n        'TrackingEvents'\n      );\n      if (trackingEventsElement) {\n        _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.childrenByName(trackingEventsElement, 'Tracking')\n          .forEach(trackingElement => {\n            const eventName = trackingElement.getAttribute('event');\n            const trackingURLTemplate = _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.parseNodeText(\n              trackingElement\n            );\n            if (eventName && trackingURLTemplate) {\n              if (!Array.isArray(companionAd.trackingEvents[eventName])) {\n                companionAd.trackingEvents[eventName] = [];\n              }\n              companionAd.trackingEvents[eventName].push(trackingURLTemplate);\n            }\n          });\n      }\n\n      companionAd.companionClickTrackingURLTemplates = _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.childrenByName(companionResource, 'CompanionClickTracking')\n        .map(clickTrackingElement => {\n          return {\n            id: clickTrackingElement.getAttribute('id') || null,\n            url: _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.parseNodeText(clickTrackingElement)\n          };\n        });\n\n      companionAd.companionClickThroughURLTemplate =\n        _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.parseNodeText(\n          _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.childByName(companionResource, 'CompanionClickThrough')\n        ) || null;\n\n      const adParametersElement = _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.childByName(\n        companionResource,\n        'AdParameters'\n      );\n      if (adParametersElement) {\n        companionAd.adParameters = _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.parseNodeText(\n          adParametersElement\n        );\n        companionAd.xmlEncoded =\n          adParametersElement.getAttribute('xmlEncoded') || null;\n      }\n\n      return companionAd;\n    });\n\n  return creative;\n}\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/parser/creative_companion_parser.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/parser/creative_linear_parser.js":
/*!***********************************************************************!*\
  !*** ./node_modules/vast-client/src/parser/creative_linear_parser.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parseCreativeLinear\": () => (/* binding */ parseCreativeLinear)\n/* harmony export */ });\n/* harmony import */ var _creative_creative_linear__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../creative/creative_linear */ \"./node_modules/vast-client/src/creative/creative_linear.js\");\n/* harmony import */ var _closed_caption_file__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../closed_caption_file */ \"./node_modules/vast-client/src/closed_caption_file.js\");\n/* harmony import */ var _icon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../icon */ \"./node_modules/vast-client/src/icon.js\");\n/* harmony import */ var _interactive_creative_file__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../interactive_creative_file */ \"./node_modules/vast-client/src/interactive_creative_file.js\");\n/* harmony import */ var _media_file__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../media_file */ \"./node_modules/vast-client/src/media_file.js\");\n/* harmony import */ var _mezzanine__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../mezzanine */ \"./node_modules/vast-client/src/mezzanine.js\");\n/* harmony import */ var _parser_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./parser_utils */ \"./node_modules/vast-client/src/parser/parser_utils.js\");\n\n\n\n\n\n\n\n\n/**\n * This module provides methods to parse a VAST Linear Element.\n */\n\n/**\n * Parses a Linear element.\n * @param  {Object} creativeElement - The VAST Linear element to parse.\n * @param  {any} creativeAttributes - The attributes of the Linear (optional).\n * @return {Object} creative - The creativeLinear object.\n */\nfunction parseCreativeLinear(creativeElement, creativeAttributes) {\n  let offset;\n  const creative = (0,_creative_creative_linear__WEBPACK_IMPORTED_MODULE_0__.createCreativeLinear)(creativeAttributes);\n\n  creative.duration = _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.parseDuration(\n    _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.parseNodeText(\n      _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.childByName(creativeElement, 'Duration')\n    )\n  );\n  const skipOffset = creativeElement.getAttribute('skipoffset');\n\n  if (typeof skipOffset === 'undefined' || skipOffset === null) {\n    creative.skipDelay = null;\n  } else if (\n    skipOffset.charAt(skipOffset.length - 1) === '%' &&\n    creative.duration !== -1\n  ) {\n    const percent = parseInt(skipOffset, 10);\n    creative.skipDelay = creative.duration * (percent / 100);\n  } else {\n    creative.skipDelay = _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.parseDuration(skipOffset);\n  }\n\n  const videoClicksElement = _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.childByName(\n    creativeElement,\n    'VideoClicks'\n  );\n  if (videoClicksElement) {\n    const videoClickThroughElement = _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.childByName(\n      videoClicksElement,\n      'ClickThrough'\n    );\n    if (videoClickThroughElement) {\n      creative.videoClickThroughURLTemplate = {\n        id: videoClickThroughElement.getAttribute('id') || null,\n        url: _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.parseNodeText(videoClickThroughElement)\n      };\n    } else {\n      creative.videoClickThroughURLTemplate = null;\n    }\n\n    _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.childrenByName(videoClicksElement, 'ClickTracking')\n      .forEach(clickTrackingElement => {\n        creative.videoClickTrackingURLTemplates.push({\n          id: clickTrackingElement.getAttribute('id') || null,\n          url: _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.parseNodeText(clickTrackingElement)\n        });\n      });\n\n    _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.childrenByName(videoClicksElement, 'CustomClick')\n      .forEach(customClickElement => {\n        creative.videoCustomClickURLTemplates.push({\n          id: customClickElement.getAttribute('id') || null,\n          url: _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.parseNodeText(customClickElement)\n        });\n      });\n  }\n\n  const adParamsElement = _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.childByName(\n    creativeElement,\n    'AdParameters'\n  );\n  if (adParamsElement) {\n    creative.adParameters = _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.parseNodeText(adParamsElement);\n  }\n\n  _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.childrenByName(creativeElement, 'TrackingEvents')\n    .forEach(trackingEventsElement => {\n      _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.childrenByName(trackingEventsElement, 'Tracking')\n        .forEach(trackingElement => {\n          let eventName = trackingElement.getAttribute('event');\n          const trackingURLTemplate = _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.parseNodeText(\n            trackingElement\n          );\n          if (eventName && trackingURLTemplate) {\n            if (eventName === 'progress') {\n              offset = trackingElement.getAttribute('offset');\n              if (!offset) {\n                return;\n              }\n              if (offset.charAt(offset.length - 1) === '%') {\n                eventName = `progress-${offset}`;\n              } else {\n                eventName = `progress-${Math.round(\n                  _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.parseDuration(offset)\n                )}`;\n              }\n            }\n\n            if (!Array.isArray(creative.trackingEvents[eventName])) {\n              creative.trackingEvents[eventName] = [];\n            }\n            creative.trackingEvents[eventName].push(trackingURLTemplate);\n          }\n        });\n    });\n\n  _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.childrenByName(creativeElement, 'MediaFiles')\n    .forEach(mediaFilesElement => {\n      _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.childrenByName(mediaFilesElement, 'MediaFile')\n        .forEach(mediaFileElement => {\n          creative.mediaFiles.push(parseMediaFile(mediaFileElement));\n        });\n\n      const interactiveCreativeElement = _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.childByName(\n        mediaFilesElement,\n        'InteractiveCreativeFile'\n      );\n      if (interactiveCreativeElement) {\n        creative.interactiveCreativeFile = parseInteractiveCreativeFile(\n          interactiveCreativeElement\n        );\n      }\n\n      const closedCaptionElements = _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.childByName(\n        mediaFilesElement,\n        'ClosedCaptionFiles'\n      );\n      if (closedCaptionElements) {\n        _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.childrenByName(closedCaptionElements, 'ClosedCaptionFile')\n          .forEach(closedCaptionElement => {\n            const closedCaptionFile = (0,_closed_caption_file__WEBPACK_IMPORTED_MODULE_1__.createClosedCaptionFile)(\n              _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.parseAttributes(closedCaptionElement)\n            );\n            closedCaptionFile.fileURL = _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.parseNodeText(\n              closedCaptionElement\n            );\n\n            creative.closedCaptionFiles.push(closedCaptionFile);\n          });\n      }\n\n      const mezzanineElement = _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.childByName(\n        mediaFilesElement,\n        'Mezzanine'\n      );\n      const requiredAttributes = getRequiredAttributes(mezzanineElement, [\n        'delivery',\n        'type',\n        'width',\n        'height'\n      ]);\n\n      if (requiredAttributes) {\n        const mezzanine = (0,_mezzanine__WEBPACK_IMPORTED_MODULE_5__.createMezzanine)();\n\n        mezzanine.id = mezzanineElement.getAttribute('id');\n        mezzanine.fileURL = _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.parseNodeText(mezzanineElement);\n        mezzanine.delivery = requiredAttributes.delivery;\n        mezzanine.codec = mezzanineElement.getAttribute('codec');\n        mezzanine.type = requiredAttributes.type;\n        mezzanine.width = parseInt(requiredAttributes.width, 10);\n        mezzanine.height = parseInt(requiredAttributes.height, 10);\n        mezzanine.fileSize = parseInt(\n          mezzanineElement.getAttribute('fileSize'),\n          10\n        );\n        mezzanine.mediaType =\n          mezzanineElement.getAttribute('mediaType') || '2D';\n\n        creative.mezzanine = mezzanine;\n      }\n    });\n\n  const iconsElement = _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.childByName(creativeElement, 'Icons');\n  if (iconsElement) {\n    _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.childrenByName(iconsElement, 'Icon').forEach(iconElement => {\n      creative.icons.push(parseIcon(iconElement));\n    });\n  }\n\n  return creative;\n}\n\n/**\n * Parses the MediaFile element from VAST.\n * @param  {Object} mediaFileElement - The VAST MediaFile element.\n * @return {Object} - Parsed mediaFile object.\n */\nfunction parseMediaFile(mediaFileElement) {\n  const mediaFile = (0,_media_file__WEBPACK_IMPORTED_MODULE_4__.createMediaFile)();\n  mediaFile.id = mediaFileElement.getAttribute('id');\n  mediaFile.fileURL = _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.parseNodeText(mediaFileElement);\n  mediaFile.deliveryType = mediaFileElement.getAttribute('delivery');\n  mediaFile.codec = mediaFileElement.getAttribute('codec');\n  mediaFile.mimeType = mediaFileElement.getAttribute('type');\n  mediaFile.mediaType = mediaFileElement.getAttribute('mediaType') || '2D';\n  mediaFile.apiFramework = mediaFileElement.getAttribute('apiFramework');\n  mediaFile.fileSize = parseInt(mediaFileElement.getAttribute('fileSize') || 0);\n  mediaFile.bitrate = parseInt(mediaFileElement.getAttribute('bitrate') || 0);\n  mediaFile.minBitrate = parseInt(\n    mediaFileElement.getAttribute('minBitrate') || 0\n  );\n  mediaFile.maxBitrate = parseInt(\n    mediaFileElement.getAttribute('maxBitrate') || 0\n  );\n  mediaFile.width = parseInt(mediaFileElement.getAttribute('width') || 0);\n  mediaFile.height = parseInt(mediaFileElement.getAttribute('height') || 0);\n\n  const scalable = mediaFileElement.getAttribute('scalable');\n  if (scalable && typeof scalable === 'string') {\n    mediaFile.scalable = _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.parseBoolean(scalable);\n  }\n\n  const maintainAspectRatio = mediaFileElement.getAttribute(\n    'maintainAspectRatio'\n  );\n  if (maintainAspectRatio && typeof maintainAspectRatio === 'string') {\n    mediaFile.maintainAspectRatio = _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.parseBoolean(\n      maintainAspectRatio\n    );\n  }\n  return mediaFile;\n}\n\n/**\n * Parses the InteractiveCreativeFile element from VAST MediaFiles node.\n * @param  {Object} interactiveCreativeElement - The VAST InteractiveCreativeFile element.\n * @return {Object} - Parsed interactiveCreativeFile object.\n */\nfunction parseInteractiveCreativeFile(interactiveCreativeElement) {\n  const interactiveCreativeFile = (0,_interactive_creative_file__WEBPACK_IMPORTED_MODULE_3__.createInteractiveCreativeFile)(\n    _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.parseAttributes(interactiveCreativeElement)\n  );\n  interactiveCreativeFile.fileURL = _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.parseNodeText(\n    interactiveCreativeElement\n  );\n  return interactiveCreativeFile;\n}\n\n/**\n * Parses the Icon element from VAST.\n * @param  {Object} iconElement - The VAST Icon element.\n * @return {Object} - Parsed icon object.\n */\nfunction parseIcon(iconElement) {\n  const icon = (0,_icon__WEBPACK_IMPORTED_MODULE_2__.createIcon)(iconElement);\n  icon.program = iconElement.getAttribute('program');\n  icon.height = parseInt(iconElement.getAttribute('height') || 0);\n  icon.width = parseInt(iconElement.getAttribute('width') || 0);\n  icon.xPosition = parseXPosition(iconElement.getAttribute('xPosition'));\n  icon.yPosition = parseYPosition(iconElement.getAttribute('yPosition'));\n  icon.apiFramework = iconElement.getAttribute('apiFramework');\n  icon.pxratio = iconElement.getAttribute('pxratio') || '1';\n  icon.offset = _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.parseDuration(iconElement.getAttribute('offset'));\n  icon.duration = _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.parseDuration(\n    iconElement.getAttribute('duration')\n  );\n\n  _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.childrenByName(iconElement, 'HTMLResource')\n    .forEach(htmlElement => {\n      icon.type = htmlElement.getAttribute('creativeType') || 'text/html';\n      icon.htmlResource = _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.parseNodeText(htmlElement);\n    });\n\n  _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.childrenByName(iconElement, 'IFrameResource')\n    .forEach(iframeElement => {\n      icon.type = iframeElement.getAttribute('creativeType') || 0;\n      icon.iframeResource = _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.parseNodeText(iframeElement);\n    });\n\n  _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.childrenByName(iconElement, 'StaticResource')\n    .forEach(staticElement => {\n      icon.type = staticElement.getAttribute('creativeType') || 0;\n      icon.staticResource = _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.parseNodeText(staticElement);\n    });\n\n  const iconClicksElement = _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.childByName(iconElement, 'IconClicks');\n  if (iconClicksElement) {\n    icon.iconClickThroughURLTemplate = _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.parseNodeText(\n      _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.childByName(iconClicksElement, 'IconClickThrough')\n    );\n    _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.childrenByName(iconClicksElement, 'IconClickTracking')\n      .forEach(iconClickTrackingElement => {\n        icon.iconClickTrackingURLTemplates.push({\n          id: iconClickTrackingElement.getAttribute('id') || null,\n          url: _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.parseNodeText(iconClickTrackingElement)\n        });\n      });\n  }\n\n  icon.iconViewTrackingURLTemplate = _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.parseNodeText(\n    _parser_utils__WEBPACK_IMPORTED_MODULE_6__.parserUtils.childByName(iconElement, 'IconViewTracking')\n  );\n  return icon;\n}\n\n/**\n * Parses an horizontal position into a String ('left' or 'right') or into a Number.\n * @param  {String} xPosition - The x position to parse.\n * @return {String|Number}\n */\nfunction parseXPosition(xPosition) {\n  if (['left', 'right'].indexOf(xPosition) !== -1) {\n    return xPosition;\n  }\n\n  return parseInt(xPosition || 0);\n}\n\n/**\n * Parses an vertical position into a String ('top' or 'bottom') or into a Number.\n * @param  {String} yPosition - The x position to parse.\n * @return {String|Number}\n */\nfunction parseYPosition(yPosition) {\n  if (['top', 'bottom'].indexOf(yPosition) !== -1) {\n    return yPosition;\n  }\n\n  return parseInt(yPosition || 0);\n}\n\n/**\n * Getting required attributes from element\n * @param  {Object} element - DOM element\n * @param  {Array} attributes - list of attributes\n * @return {Object|null} null if a least one element not present\n */\nfunction getRequiredAttributes(element, attributes) {\n  const values = {};\n  let error = false;\n\n  attributes.forEach(name => {\n    if (!element || !element.getAttribute(name)) {\n      error = true;\n    } else {\n      values[name] = element.getAttribute(name);\n    }\n  });\n\n  return error ? null : values;\n}\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/parser/creative_linear_parser.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/parser/creative_non_linear_parser.js":
/*!***************************************************************************!*\
  !*** ./node_modules/vast-client/src/parser/creative_non_linear_parser.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parseCreativeNonLinear\": () => (/* binding */ parseCreativeNonLinear)\n/* harmony export */ });\n/* harmony import */ var _creative_creative_non_linear__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../creative/creative_non_linear */ \"./node_modules/vast-client/src/creative/creative_non_linear.js\");\n/* harmony import */ var _non_linear_ad__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../non_linear_ad */ \"./node_modules/vast-client/src/non_linear_ad.js\");\n/* harmony import */ var _parser_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./parser_utils */ \"./node_modules/vast-client/src/parser/parser_utils.js\");\n\n\n\n\n/**\n * This module provides methods to parse a VAST NonLinear Element.\n */\n\n/**\n * Parses a NonLinear element.\n * @param  {any} creativeElement - The VAST NonLinear element to parse.\n * @param  {any} creativeAttributes - The attributes of the NonLinear (optional).\n * @return {Object} creative - The CreativeNonLinear object.\n */\nfunction parseCreativeNonLinear(creativeElement, creativeAttributes) {\n  const creative = (0,_creative_creative_non_linear__WEBPACK_IMPORTED_MODULE_0__.createCreativeNonLinear)(creativeAttributes);\n  _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.childrenByName(creativeElement, 'TrackingEvents')\n    .forEach(trackingEventsElement => {\n      let eventName, trackingURLTemplate;\n      _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.childrenByName(trackingEventsElement, 'Tracking')\n        .forEach(trackingElement => {\n          eventName = trackingElement.getAttribute('event');\n          trackingURLTemplate = _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.parseNodeText(trackingElement);\n\n          if (eventName && trackingURLTemplate) {\n            if (!Array.isArray(creative.trackingEvents[eventName])) {\n              creative.trackingEvents[eventName] = [];\n            }\n            creative.trackingEvents[eventName].push(trackingURLTemplate);\n          }\n        });\n    });\n\n  _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.childrenByName(creativeElement, 'NonLinear')\n    .forEach(nonlinearResource => {\n      const nonlinearAd = (0,_non_linear_ad__WEBPACK_IMPORTED_MODULE_1__.createNonLinearAd)();\n      nonlinearAd.id = nonlinearResource.getAttribute('id') || null;\n      nonlinearAd.width = nonlinearResource.getAttribute('width');\n      nonlinearAd.height = nonlinearResource.getAttribute('height');\n      nonlinearAd.expandedWidth = nonlinearResource.getAttribute(\n        'expandedWidth'\n      );\n      nonlinearAd.expandedHeight = nonlinearResource.getAttribute(\n        'expandedHeight'\n      );\n      nonlinearAd.scalable = _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.parseBoolean(\n        nonlinearResource.getAttribute('scalable')\n      );\n      nonlinearAd.maintainAspectRatio = _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.parseBoolean(\n        nonlinearResource.getAttribute('maintainAspectRatio')\n      );\n      nonlinearAd.minSuggestedDuration = _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.parseDuration(\n        nonlinearResource.getAttribute('minSuggestedDuration')\n      );\n      nonlinearAd.apiFramework = nonlinearResource.getAttribute('apiFramework');\n\n      _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.childrenByName(nonlinearResource, 'HTMLResource')\n        .forEach(htmlElement => {\n          nonlinearAd.type =\n            htmlElement.getAttribute('creativeType') || 'text/html';\n          nonlinearAd.htmlResource = _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.parseNodeText(htmlElement);\n        });\n\n      _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.childrenByName(nonlinearResource, 'IFrameResource')\n        .forEach(iframeElement => {\n          nonlinearAd.type = iframeElement.getAttribute('creativeType') || 0;\n          nonlinearAd.iframeResource = _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.parseNodeText(iframeElement);\n        });\n\n      _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.childrenByName(nonlinearResource, 'StaticResource')\n        .forEach(staticElement => {\n          nonlinearAd.type = staticElement.getAttribute('creativeType') || 0;\n          nonlinearAd.staticResource = _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.parseNodeText(staticElement);\n        });\n\n      const adParamsElement = _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.childByName(\n        nonlinearResource,\n        'AdParameters'\n      );\n      if (adParamsElement) {\n        nonlinearAd.adParameters = _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.parseNodeText(adParamsElement);\n      }\n\n      nonlinearAd.nonlinearClickThroughURLTemplate = _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.parseNodeText(\n        _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.childByName(nonlinearResource, 'NonLinearClickThrough')\n      );\n      _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.childrenByName(nonlinearResource, 'NonLinearClickTracking')\n        .forEach(clickTrackingElement => {\n          nonlinearAd.nonlinearClickTrackingURLTemplates.push({\n            id: clickTrackingElement.getAttribute('id') || null,\n            url: _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.parseNodeText(clickTrackingElement)\n          });\n        });\n\n      creative.variations.push(nonlinearAd);\n    });\n\n  return creative;\n}\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/parser/creative_non_linear_parser.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/parser/creatives_parser.js":
/*!*****************************************************************!*\
  !*** ./node_modules/vast-client/src/parser/creatives_parser.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parseCreatives\": () => (/* binding */ parseCreatives)\n/* harmony export */ });\n/* harmony import */ var _creative_companion_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./creative_companion_parser */ \"./node_modules/vast-client/src/parser/creative_companion_parser.js\");\n/* harmony import */ var _creative_linear_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./creative_linear_parser */ \"./node_modules/vast-client/src/parser/creative_linear_parser.js\");\n/* harmony import */ var _creative_non_linear_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./creative_non_linear_parser */ \"./node_modules/vast-client/src/parser/creative_non_linear_parser.js\");\n/* harmony import */ var _extensions_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./extensions_parser */ \"./node_modules/vast-client/src/parser/extensions_parser.js\");\n/* harmony import */ var _parser_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./parser_utils */ \"./node_modules/vast-client/src/parser/parser_utils.js\");\n\n\n\n\n\n\n/**\n * Parses the creatives from the Creatives Node.\n * @param  {any} creativeNodes - The creative nodes to parse.\n * @return {Array<Creative>} - An array of Creative objects.\n */\nfunction parseCreatives(creativeNodes) {\n  const creatives = [];\n\n  creativeNodes.forEach(creativeElement => {\n    const creativeAttributes = {\n      id: creativeElement.getAttribute('id') || null,\n      adId: parseCreativeAdIdAttribute(creativeElement),\n      sequence: creativeElement.getAttribute('sequence') || null,\n      apiFramework: creativeElement.getAttribute('apiFramework') || null\n    };\n\n    let universalAdId;\n    const universalAdIdElement = _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.childByName(\n      creativeElement,\n      'UniversalAdId'\n    );\n    if (universalAdIdElement) {\n      universalAdId = {\n        idRegistry:\n          universalAdIdElement.getAttribute('idRegistry') || 'unknown',\n        value: _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.parseNodeText(universalAdIdElement)\n      };\n    }\n\n    let creativeExtensions;\n    const creativeExtensionsElement = _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.childByName(\n      creativeElement,\n      'CreativeExtensions'\n    );\n    if (creativeExtensionsElement) {\n      creativeExtensions = (0,_extensions_parser__WEBPACK_IMPORTED_MODULE_3__.parseExtensions)(\n        _parser_utils__WEBPACK_IMPORTED_MODULE_4__.parserUtils.childrenByName(\n          creativeExtensionsElement,\n          'CreativeExtension'\n        )\n      );\n    }\n\n    for (const creativeTypeElementKey in creativeElement.childNodes) {\n      const creativeTypeElement =\n        creativeElement.childNodes[creativeTypeElementKey];\n      let parsedCreative;\n\n      switch (creativeTypeElement.nodeName) {\n        case 'Linear':\n          parsedCreative = (0,_creative_linear_parser__WEBPACK_IMPORTED_MODULE_1__.parseCreativeLinear)(\n            creativeTypeElement,\n            creativeAttributes\n          );\n          break;\n        case 'NonLinearAds':\n          parsedCreative = (0,_creative_non_linear_parser__WEBPACK_IMPORTED_MODULE_2__.parseCreativeNonLinear)(\n            creativeTypeElement,\n            creativeAttributes\n          );\n          break;\n        case 'CompanionAds':\n          parsedCreative = (0,_creative_companion_parser__WEBPACK_IMPORTED_MODULE_0__.parseCreativeCompanion)(\n            creativeTypeElement,\n            creativeAttributes\n          );\n          break;\n      }\n\n      if (parsedCreative) {\n        if (universalAdId) {\n          parsedCreative.universalAdId = universalAdId;\n        }\n\n        if (creativeExtensions) {\n          parsedCreative.creativeExtensions = creativeExtensions;\n        }\n        creatives.push(parsedCreative);\n      }\n    }\n  });\n  return creatives;\n}\n\n/**\n * Parses the creative adId Attribute.\n * @param  {any} creativeElement - The creative element to retrieve the adId from.\n * @return {String|null}\n */\nfunction parseCreativeAdIdAttribute(creativeElement) {\n  return (\n    creativeElement.getAttribute('AdID') || // VAST 2 spec\n    creativeElement.getAttribute('adID') || // VAST 3 spec\n    creativeElement.getAttribute('adId') || // VAST 4 spec\n    null\n  );\n}\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/parser/creatives_parser.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/parser/extensions_parser.js":
/*!******************************************************************!*\
  !*** ./node_modules/vast-client/src/parser/extensions_parser.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parseExtensions\": () => (/* binding */ parseExtensions)\n/* harmony export */ });\n/* harmony import */ var _extension__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../extension */ \"./node_modules/vast-client/src/extension.js\");\n/* harmony import */ var _parser_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parser_utils */ \"./node_modules/vast-client/src/parser/parser_utils.js\");\n\n\n\n/**\n * Parses an array of Extension elements.\n * @param  {Node[]} extensions - The array of extensions to parse.\n * @param  {String} type - The type of extensions to parse.(Ad|Creative)\n * @return {AdExtension[]|CreativeExtension[]} - The nodes parsed to extensions\n */\nfunction parseExtensions(extensions) {\n  const exts = [];\n  extensions.forEach(extNode => {\n    const ext = _parseExtension(extNode);\n\n    if (ext) {\n      exts.push(ext);\n    }\n  });\n  return exts;\n}\n\n/**\n * Parses an extension child node\n * @param {Node} extNode - The extension node to parse\n * @return {AdExtension|CreativeExtension|null} - The node parsed to extension\n */\nfunction _parseExtension(extNode) {\n  // Ignore comments\n  if (extNode.nodeName === '#comment') return null;\n\n  const ext = (0,_extension__WEBPACK_IMPORTED_MODULE_0__.createExtension)();\n\n  const extNodeAttrs = extNode.attributes;\n  const childNodes = extNode.childNodes;\n\n  ext.name = extNode.nodeName;\n\n  // Parse attributes\n  if (extNode.attributes) {\n    for (const extNodeAttrKey in extNodeAttrs) {\n      if (extNodeAttrs.hasOwnProperty(extNodeAttrKey)) {\n        const extNodeAttr = extNodeAttrs[extNodeAttrKey];\n\n        if (extNodeAttr.nodeName && extNodeAttr.nodeValue) {\n          ext.attributes[extNodeAttr.nodeName] = extNodeAttr.nodeValue;\n        }\n      }\n    }\n  }\n\n  // Parse all children\n  for (const childNodeKey in childNodes) {\n    if (childNodes.hasOwnProperty(childNodeKey)) {\n      const parsedChild = _parseExtension(childNodes[childNodeKey]);\n      if (parsedChild) {\n        ext.children.push(parsedChild);\n      }\n    }\n  }\n\n  /*\n    Only parse value of Nodes with only eather no children or only a cdata or text\n    to avoid useless parsing that would result to a concatenation of all children\n  */\n  if (\n    ext.children.length === 0 ||\n    (ext.children.length === 1 &&\n      ['#cdata-section', '#text'].indexOf(ext.children[0].name) >= 0)\n  ) {\n    const txt = _parser_utils__WEBPACK_IMPORTED_MODULE_1__.parserUtils.parseNodeText(extNode);\n\n    if (txt !== '') {\n      ext.value = txt;\n    }\n\n    // Remove the children if it's a cdata or simply text to avoid useless children\n    ext.children = [];\n  }\n\n  // Only return not empty objects to not pollute extentions\n  return (0,_extension__WEBPACK_IMPORTED_MODULE_0__.isEmptyExtension)(ext) ? null : ext;\n}\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/parser/extensions_parser.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/parser/parser_utils.js":
/*!*************************************************************!*\
  !*** ./node_modules/vast-client/src/parser/parser_utils.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parserUtils\": () => (/* binding */ parserUtils)\n/* harmony export */ });\n/* harmony import */ var _util_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/util */ \"./node_modules/vast-client/src/util/util.js\");\n\n\n/**\n * This module provides support methods to the parsing classes.\n */\n\n/**\n * Returns the first element of the given node which nodeName matches the given name.\n * @param  {Node} node - The node to use to find a match.\n * @param  {String} name - The name to look for.\n * @return {Object|undefined}\n */\nfunction childByName(node, name) {\n  const childNodes = node.childNodes;\n\n  for (const childKey in childNodes) {\n    const child = childNodes[childKey];\n\n    if (child.nodeName === name) {\n      return child;\n    }\n  }\n}\n\n/**\n * Returns all the elements of the given node which nodeName match the given name.\n * @param  {Node} node - The node to use to find the matches.\n * @param  {String} name - The name to look for.\n * @return {Array}\n */\nfunction childrenByName(node, name) {\n  const children = [];\n  const childNodes = node.childNodes;\n\n  for (const childKey in childNodes) {\n    const child = childNodes[childKey];\n\n    if (child.nodeName === name) {\n      children.push(child);\n    }\n  }\n  return children;\n}\n\n/**\n * Converts relative vastAdTagUri.\n * @param  {String} vastAdTagUrl - The url to resolve.\n * @param  {String} originalUrl - The original url.\n * @return {String}\n */\nfunction resolveVastAdTagURI(vastAdTagUrl, originalUrl) {\n  if (!originalUrl) {\n    return vastAdTagUrl;\n  }\n\n  if (vastAdTagUrl.indexOf('//') === 0) {\n    const { protocol } = location;\n    return `${protocol}${vastAdTagUrl}`;\n  }\n\n  if (vastAdTagUrl.indexOf('://') === -1) {\n    // Resolve relative URLs (mainly for unit testing)\n    const baseURL = originalUrl.slice(0, originalUrl.lastIndexOf('/'));\n    return `${baseURL}/${vastAdTagUrl}`;\n  }\n\n  return vastAdTagUrl;\n}\n\n/**\n * Converts a boolean string into a Boolean.\n * @param  {String} booleanString - The boolean string to convert.\n * @return {Boolean}\n */\nfunction parseBoolean(booleanString) {\n  return ['true', 'TRUE', 'True', '1'].indexOf(booleanString) !== -1;\n}\n\n/**\n * Parses a node text (for legacy support).\n * @param  {Object} node - The node to parse the text from.\n * @return {String}\n */\nfunction parseNodeText(node) {\n  return node && (node.textContent || node.text || '').trim();\n}\n\n/**\n * Copies an attribute from a node to another.\n * @param  {String} attributeName - The name of the attribute to clone.\n * @param  {Object} nodeSource - The source node to copy the attribute from.\n * @param  {Object} nodeDestination - The destination node to copy the attribute at.\n */\nfunction copyNodeAttribute(attributeName, nodeSource, nodeDestination) {\n  const attributeValue = nodeSource.getAttribute(attributeName);\n  if (attributeValue) {\n    nodeDestination.setAttribute(attributeName, attributeValue);\n  }\n}\n\n/**\n * Converts element attributes into an object, where object key is attribute name\n * and object value is attribute value\n * @param {Element} element\n * @returns {Object}\n */\nfunction parseAttributes(element) {\n  const nodeAttributes = element.attributes;\n  const attributes = {};\n  for (let i = 0; i < nodeAttributes.length; i++) {\n    attributes[nodeAttributes[i].nodeName] = nodeAttributes[i].nodeValue;\n  }\n  return attributes;\n}\n\n/**\n * Parses a String duration into a Number.\n * @param  {String} durationString - The dureation represented as a string.\n * @return {Number}\n */\nfunction parseDuration(durationString) {\n  if (durationString === null || typeof durationString === 'undefined') {\n    return -1;\n  }\n  // Some VAST doesn't have an HH:MM:SS duration format but instead jus the number of seconds\n  if (_util_util__WEBPACK_IMPORTED_MODULE_0__.util.isNumeric(durationString)) {\n    return parseInt(durationString);\n  }\n\n  const durationComponents = durationString.split(':');\n  if (durationComponents.length !== 3) {\n    return -1;\n  }\n\n  const secondsAndMS = durationComponents[2].split('.');\n  let seconds = parseInt(secondsAndMS[0]);\n  if (secondsAndMS.length === 2) {\n    seconds += parseFloat(`0.${secondsAndMS[1]}`);\n  }\n\n  const minutes = parseInt(durationComponents[1] * 60);\n  const hours = parseInt(durationComponents[0] * 60 * 60);\n\n  if (\n    isNaN(hours) ||\n    isNaN(minutes) ||\n    isNaN(seconds) ||\n    minutes > 60 * 60 ||\n    seconds > 60\n  ) {\n    return -1;\n  }\n  return hours + minutes + seconds;\n}\n\n/**\n * Splits an Array of ads into an Array of Arrays of ads.\n * Each subarray contains either one ad or multiple ads (an AdPod)\n * @param  {Array} ads - An Array of ads to split\n * @return {Array}\n */\nfunction splitVAST(ads) {\n  const splittedVAST = [];\n  let lastAdPod = null;\n\n  ads.forEach((ad, i) => {\n    if (ad.sequence) {\n      ad.sequence = parseInt(ad.sequence, 10);\n    }\n    // The current Ad may be the next Ad of an AdPod\n    if (ad.sequence > 1) {\n      const lastAd = ads[i - 1];\n      // check if the current Ad is exactly the next one in the AdPod\n      if (lastAd && lastAd.sequence === ad.sequence - 1) {\n        lastAdPod && lastAdPod.push(ad);\n        return;\n      }\n      // If the ad had a sequence attribute but it was not part of a correctly formed\n      // AdPod, let's remove the sequence attribute\n      delete ad.sequence;\n    }\n\n    lastAdPod = [ad];\n    splittedVAST.push(lastAdPod);\n  });\n\n  return splittedVAST;\n}\n\n/**\n * Parses the attributes and assign them to object\n * @param  {Object} attributes attribute\n * @param  {Object} verificationObject with properties which can be assigned\n */\nfunction assignAttributes(attributes, verificationObject) {\n  if (attributes) {\n    for (const attrKey in attributes) {\n      const attribute = attributes[attrKey];\n\n      if (\n        attribute.nodeName &&\n        attribute.nodeValue &&\n        verificationObject.hasOwnProperty(attribute.nodeName)\n      ) {\n        let value = attribute.nodeValue;\n\n        if (typeof verificationObject[attribute.nodeName] === 'boolean') {\n          value = parseBoolean(value);\n        }\n        verificationObject[attribute.nodeName] = value;\n      }\n    }\n  }\n}\n\n/**\n * Merges the data between an unwrapped ad and his wrapper.\n * @param  {Ad} unwrappedAd - The 'unwrapped' Ad.\n * @param  {Ad} wrapper - The wrapper Ad.\n * @return {void}\n */\nfunction mergeWrapperAdData(unwrappedAd, wrapper) {\n  unwrappedAd.errorURLTemplates = wrapper.errorURLTemplates.concat(\n    unwrappedAd.errorURLTemplates\n  );\n  unwrappedAd.impressionURLTemplates = wrapper.impressionURLTemplates.concat(\n    unwrappedAd.impressionURLTemplates\n  );\n  unwrappedAd.extensions = wrapper.extensions.concat(unwrappedAd.extensions);\n\n  // values from the child wrapper will be overridden\n  unwrappedAd.followAdditionalWrappers = wrapper.followAdditionalWrappers;\n  unwrappedAd.allowMultipleAds = wrapper.allowMultipleAds;\n  unwrappedAd.fallbackOnNoAd = wrapper.fallbackOnNoAd;\n\n  const wrapperCompanions = (wrapper.creatives || []).filter(\n    creative => creative && creative.type === 'companion'\n  );\n  const wrapperCompanionClickTracking = wrapperCompanions.reduce(\n    (result, creative) => {\n      (creative.variations || []).forEach(variation => {\n        (variation.companionClickTrackingURLTemplates || []).forEach(\n          companionClickTrackingURLTemplate => {\n            if (\n              !_util_util__WEBPACK_IMPORTED_MODULE_0__.util.containsTemplateObject(\n                companionClickTrackingURLTemplate,\n                result\n              )\n            ) {\n              result.push(companionClickTrackingURLTemplate);\n            }\n          }\n        );\n      });\n      return result;\n    },\n    []\n  );\n  unwrappedAd.creatives = wrapperCompanions.concat(unwrappedAd.creatives);\n\n  const wrapperHasVideoClickTracking =\n    wrapper.videoClickTrackingURLTemplates &&\n    wrapper.videoClickTrackingURLTemplates.length;\n\n  const wrapperHasVideoCustomClick =\n    wrapper.videoCustomClickURLTemplates &&\n    wrapper.videoCustomClickURLTemplates.length;\n\n  unwrappedAd.creatives.forEach(creative => {\n    // merge tracking events\n    if (wrapper.trackingEvents && wrapper.trackingEvents[creative.type]) {\n      for (const eventName in wrapper.trackingEvents[creative.type]) {\n        const urls = wrapper.trackingEvents[creative.type][eventName];\n        if (!Array.isArray(creative.trackingEvents[eventName])) {\n          creative.trackingEvents[eventName] = [];\n        }\n        creative.trackingEvents[eventName] = creative.trackingEvents[\n          eventName\n        ].concat(urls);\n      }\n    }\n\n    if (creative.type === 'linear') {\n      // merge video click tracking url\n      if (wrapperHasVideoClickTracking) {\n        creative.videoClickTrackingURLTemplates = creative.videoClickTrackingURLTemplates.concat(\n          wrapper.videoClickTrackingURLTemplates\n        );\n      }\n\n      // merge video custom click url\n      if (wrapperHasVideoCustomClick) {\n        creative.videoCustomClickURLTemplates = creative.videoCustomClickURLTemplates.concat(\n          wrapper.videoCustomClickURLTemplates\n        );\n      }\n\n      // VAST 2.0 support - Use Wrapper/linear/clickThrough when Inline/Linear/clickThrough is null\n      if (\n        wrapper.videoClickThroughURLTemplate &&\n        (creative.videoClickThroughURLTemplate === null ||\n          typeof creative.videoClickThroughURLTemplate === 'undefined')\n      ) {\n        creative.videoClickThroughURLTemplate =\n          wrapper.videoClickThroughURLTemplate;\n      }\n    }\n\n    // pass wrapper companion trackers to all companions\n    if (creative.type === 'companion' && wrapperCompanionClickTracking.length) {\n      (creative.variations || []).forEach(variation => {\n        variation.companionClickTrackingURLTemplates = _util_util__WEBPACK_IMPORTED_MODULE_0__.util.joinArrayOfUniqueTemplateObjs(\n          variation.companionClickTrackingURLTemplates,\n          wrapperCompanionClickTracking\n        );\n      });\n    }\n  });\n  // As specified by VAST specs unwrapped ads should contains wrapper adVerification script\n  if (wrapper.adVerifications) {\n    unwrappedAd.adVerifications = unwrappedAd.adVerifications.concat(\n      wrapper.adVerifications\n    );\n  }\n\n  if (wrapper.blockedAdCategories) {\n    unwrappedAd.blockedAdCategories = unwrappedAd.blockedAdCategories.concat(\n      wrapper.blockedAdCategories\n    );\n  }\n}\n\nconst parserUtils = {\n  childByName,\n  childrenByName,\n  resolveVastAdTagURI,\n  parseBoolean,\n  parseNodeText,\n  copyNodeAttribute,\n  parseAttributes,\n  parseDuration,\n  splitVAST,\n  assignAttributes,\n  mergeWrapperAdData\n};\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/parser/parser_utils.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/parser/parser_verification.js":
/*!********************************************************************!*\
  !*** ./node_modules/vast-client/src/parser/parser_verification.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parserVerification\": () => (/* binding */ parserVerification)\n/* harmony export */ });\n/* harmony import */ var _util_requiredValues__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/requiredValues */ \"./node_modules/vast-client/src/util/requiredValues.js\");\n/* harmony import */ var _parser_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parser_utils */ \"./node_modules/vast-client/src/parser/parser_utils.js\");\n\n\n\n/**\n * Verify node required values and also verify recursively all his child nodes.\n * Trigger warnings if a node required value is missing.\n * @param  {Node} node - The node element.\n * @param  {Function} emit - Emit function used to trigger Warning event.\n * @emits  VASTParser#VAST-warning\n * @param  {undefined|Boolean} [isAdInline] - Passed recursively to itself. True if the node is contained inside a inLine tag.\n */\nfunction verifyRequiredValues(node, emit, isAdInline) {\n  if (!node || !node.nodeName) {\n    return;\n  }\n  if (node.nodeName === 'InLine') {\n    isAdInline = true;\n  }\n  verifyRequiredAttributes(node, emit);\n\n  if (hasSubElements(node)) {\n    verifyRequiredSubElements(node, emit, isAdInline);\n    for (let i = 0; i < node.children.length; i++) {\n      verifyRequiredValues(node.children[i], emit, isAdInline);\n    }\n  } else if (_parser_utils__WEBPACK_IMPORTED_MODULE_1__.parserUtils.parseNodeText(node).length === 0) {\n    emitMissingValueWarning(\n      { name: node.nodeName, parentName: node.parentNode.nodeName },\n      emit\n    );\n  }\n}\n\n/**\n * Verify and trigger warnings if node required attributes are not set.\n * @param  {Node} node - The node element.\n * @param  {Function} emit - Emit function used to trigger Warning event.\n * @emits  VASTParser#VAST-warning\n */\nfunction verifyRequiredAttributes(node, emit) {\n  if (\n    !_util_requiredValues__WEBPACK_IMPORTED_MODULE_0__.requiredValues[node.nodeName] ||\n    !_util_requiredValues__WEBPACK_IMPORTED_MODULE_0__.requiredValues[node.nodeName].attributes\n  ) {\n    return;\n  }\n  const requiredAttributes = _util_requiredValues__WEBPACK_IMPORTED_MODULE_0__.requiredValues[node.nodeName].attributes;\n  const missingAttributes = requiredAttributes.filter(\n    attributeName => !node.getAttribute(attributeName)\n  );\n  if (missingAttributes.length > 0) {\n    emitMissingValueWarning(\n      {\n        name: node.nodeName,\n        parentName: node.parentNode.nodeName,\n        attributes: missingAttributes\n      },\n      emit\n    );\n  }\n}\n\n/**\n * Verify and trigger warnings if node required sub element are not set.\n * @param  {Node} node - The node element\n * @param  {Boolean} isAdInline - True if node is contained in a inline\n * @param  {Function} emit - Emit function used to trigger Warning event.\n * @emits  VASTParser#VAST-warning\n */\nfunction verifyRequiredSubElements(node, emit, isAdInline) {\n  const required = _util_requiredValues__WEBPACK_IMPORTED_MODULE_0__.requiredValues[node.nodeName];\n  // Do not verify subelement if node is a child of wrapper, but verify it if node is the Wrapper itself\n  // Wrapper child have no required subElement. (Only InLine does)\n  const isInWrapperButNotWrapperItself =\n    !isAdInline && node.nodeName !== 'Wrapper';\n  if (!required || isInWrapperButNotWrapperItself) {\n    return;\n  }\n\n  if (required.subElements) {\n    const requiredSubElements = required.subElements;\n    const missingSubElements = requiredSubElements.filter(\n      subElementName => !_parser_utils__WEBPACK_IMPORTED_MODULE_1__.parserUtils.childByName(node, subElementName)\n    );\n\n    if (missingSubElements.length > 0) {\n      emitMissingValueWarning(\n        {\n          name: node.nodeName,\n          parentName: node.parentNode.nodeName,\n          subElements: missingSubElements\n        },\n        emit\n      );\n    }\n  }\n\n  // When InLine format is used some nodes (i.e <NonLinear>, <Companion>, or <Icon>)\n  // require at least one of the following resources: StaticResource, IFrameResource, HTMLResource\n  if (!isAdInline || !required.oneOfinLineResources) {\n    return;\n  }\n\n  const resourceFound = required.oneOfinLineResources.some(resource => {\n    return _parser_utils__WEBPACK_IMPORTED_MODULE_1__.parserUtils.childByName(node, resource);\n  });\n  if (!resourceFound) {\n    emitMissingValueWarning(\n      {\n        name: node.nodeName,\n        parentName: node.parentNode.nodeName,\n        oneOfResources: required.oneOfinLineResources\n      },\n      emit\n    );\n  }\n}\n\n/**\n * Check if a node has sub elements.\n * @param  {Node} node - The node element.\n * @returns {Boolean}\n */\nfunction hasSubElements(node) {\n  return node.children && node.children.length !== 0;\n}\n\n/**\n * Trigger Warning if a element is empty or has missing attributes/subelements/resources\n * @param  {Object} missingElement - Object containing missing elements and values\n * @param  {String} missingElement.name - The name of element containing missing values\n * @param  {String} missingElement.parentName - The parent name of element containing missing values\n * @param  {Array} missingElement.attributes - The array of missing attributes\n * @param  {Array} missingElement.subElements - The array of missing sub elements\n * @param  {Array} missingElement.oneOfResources - The array of resources in which at least one must be provided by the element\n * @param  {Function} emit - Emit function used to trigger Warning event.\n * @emits  VastParser#VAST-warning\n */\nfunction emitMissingValueWarning(\n  { name, parentName, attributes, subElements, oneOfResources },\n  emit\n) {\n  let message = `Element '${name}'`;\n  if (attributes) {\n    message += ` missing required attribute(s) '${attributes.join(', ')}' `;\n  } else if (subElements) {\n    message += ` missing required sub element(s) '${subElements.join(', ')}' `;\n  } else if (oneOfResources) {\n    message += ` must provide one of the following '${oneOfResources.join(\n      ', '\n    )}' `;\n  } else {\n    message += ` is empty`;\n  }\n\n  emit('VAST-warning', {\n    message,\n    parentElement: parentName,\n    specVersion: 4.1\n  });\n}\n\nconst parserVerification = {\n  verifyRequiredValues,\n  hasSubElements,\n  emitMissingValueWarning,\n  verifyRequiredAttributes,\n  verifyRequiredSubElements\n};\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/parser/parser_verification.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/parser/vast_parser.js":
/*!************************************************************!*\
  !*** ./node_modules/vast-client/src/parser/vast_parser.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"VASTParser\": () => (/* binding */ VASTParser)\n/* harmony export */ });\n/* harmony import */ var _ad_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ad_parser */ \"./node_modules/vast-client/src/parser/ad_parser.js\");\n/* harmony import */ var _util_event_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/event_emitter */ \"./node_modules/vast-client/src/util/event_emitter.js\");\n/* harmony import */ var _parser_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./parser_utils */ \"./node_modules/vast-client/src/parser/parser_utils.js\");\n/* harmony import */ var _url_handler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../url_handler */ \"./node_modules/vast-client/src/url_handler.js\");\n/* harmony import */ var _util_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/util */ \"./node_modules/vast-client/src/util/util.js\");\n/* harmony import */ var _vast_response__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../vast_response */ \"./node_modules/vast-client/src/vast_response.js\");\n/* harmony import */ var _urlhandlers_consts__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../urlhandlers/consts */ \"./node_modules/vast-client/src/urlhandlers/consts.js\");\n/* harmony import */ var _bitrate__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./bitrate */ \"./node_modules/vast-client/src/parser/bitrate.js\");\n\n\n\n\n\n\n\n\n\nconst DEFAULT_MAX_WRAPPER_DEPTH = 10;\nconst DEFAULT_EVENT_DATA = {\n  ERRORCODE: 900,\n  extensions: [],\n};\n\n/**\n * This class provides methods to fetch and parse a VAST document.\n * @export\n * @class VASTParser\n * @extends EventEmitter\n */\nclass VASTParser extends _util_event_emitter__WEBPACK_IMPORTED_MODULE_1__.EventEmitter {\n  /**\n   * Creates an instance of VASTParser.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    this.remainingAds = [];\n    this.parentURLs = [];\n    this.errorURLTemplates = [];\n    this.rootErrorURLTemplates = [];\n    this.maxWrapperDepth = null;\n    this.URLTemplateFilters = [];\n    this.fetchingOptions = {};\n    this.parsingOptions = {};\n  }\n\n  /**\n   * Adds a filter function to the array of filters which are called before fetching a VAST document.\n   * @param  {function} filter - The filter function to be added at the end of the array.\n   * @return {void}\n   */\n  addURLTemplateFilter(filter) {\n    if (typeof filter === 'function') {\n      this.URLTemplateFilters.push(filter);\n    }\n  }\n\n  /**\n   * Removes the last element of the url templates filters array.\n   * @return {void}\n   */\n  removeURLTemplateFilter() {\n    this.URLTemplateFilters.pop();\n  }\n\n  /**\n   * Returns the number of filters of the url templates filters array.\n   * @return {Number}\n   */\n  countURLTemplateFilters() {\n    return this.URLTemplateFilters.length;\n  }\n\n  /**\n   * Removes all the filter functions from the url templates filters array.\n   * @return {void}\n   */\n  clearURLTemplateFilters() {\n    this.URLTemplateFilters = [];\n  }\n\n  /**\n   * Tracks the error provided in the errorCode parameter and emits a VAST-error event for the given error.\n   * @param  {Array} urlTemplates - An Array of url templates to use to make the tracking call.\n   * @param  {Object} errorCode - An Object containing the error data.\n   * @param  {Object} data - One (or more) Object containing additional data.\n   * @emits  VASTParser#VAST-error\n   * @return {void}\n   */\n  trackVastError(urlTemplates, errorCode, ...data) {\n    this.emit(\n      'VAST-error',\n      Object.assign({}, DEFAULT_EVENT_DATA, errorCode, ...data)\n    );\n    _util_util__WEBPACK_IMPORTED_MODULE_4__.util.track(urlTemplates, errorCode);\n  }\n\n  /**\n   * Returns an array of errorURLTemplates for the VAST being parsed.\n   * @return {Array}\n   */\n  getErrorURLTemplates() {\n    return this.rootErrorURLTemplates.concat(this.errorURLTemplates);\n  }\n\n  /**\n   * Returns the estimated bitrate calculated from all previous requests\n   * @returns The average of all estimated bitrates in kb/s.\n   */\n  getEstimatedBitrate() {\n    return _bitrate__WEBPACK_IMPORTED_MODULE_7__.estimatedBitrate\n  }\n\n  /**\n   * Fetches a VAST document for the given url.\n   * Returns a Promise which resolves,rejects according to the result of the request.\n   * @param  {String} url - The url to request the VAST document.\n   * @param {Number} wrapperDepth - how many times the current url has been wrapped\n   * @param {String} previousUrl - url of the previous VAST\n   * @emits  VASTParser#VAST-resolving\n   * @emits  VASTParser#VAST-resolved\n   * @return {Promise}\n   */\n  fetchVAST(url, wrapperDepth = 0, previousUrl = null) {\n    return new Promise((resolve, reject) => {\n      // Process url with defined filter\n      this.URLTemplateFilters.forEach((filter) => {\n        url = filter(url);\n      });\n\n      this.parentURLs.push(url);\n      const timeBeforeGet = Date.now();\n      this.emit('VAST-resolving', {\n        url,\n        previousUrl,\n        wrapperDepth,\n        maxWrapperDepth: this.maxWrapperDepth,\n        timeout: this.fetchingOptions.timeout,\n      });\n\n      this.urlHandler.get(\n        url,\n        this.fetchingOptions,\n        (error, xml, details = {}) => {\n          const deltaTime = Math.round(Date.now() - timeBeforeGet);\n          const info = Object.assign(\n            {\n              url,\n              previousUrl,\n              wrapperDepth,\n              error,\n              duration: deltaTime,\n            },\n            details\n          );\n\n          this.emit('VAST-resolved', info);\n\n          (0,_bitrate__WEBPACK_IMPORTED_MODULE_7__.updateEstimatedBitrate)(details.byteLength, deltaTime);\n\n          if (error) {\n            reject(error);\n          } else {\n            resolve(xml);\n          }\n        }\n      );\n    });\n  }\n\n  /**\n   * Inits the parsing properties of the class with the custom values provided as options.\n   * @param {Object} options - The options to initialize a parsing sequence\n   */\n  initParsingStatus(options = {}) {\n    this.errorURLTemplates = [];\n    this.fetchingOptions = {\n      timeout: options.timeout || _urlhandlers_consts__WEBPACK_IMPORTED_MODULE_6__.DEFAULT_TIMEOUT,\n      withCredentials: options.withCredentials,\n    };\n    this.maxWrapperDepth = options.wrapperLimit || DEFAULT_MAX_WRAPPER_DEPTH;\n    this.parentURLs = [];\n    this.parsingOptions = { allowMultipleAds: options.allowMultipleAds };\n    this.remainingAds = [];\n    this.rootErrorURLTemplates = [];\n    this.rootURL = '';\n    this.urlHandler = options.urlHandler || options.urlhandler || _url_handler__WEBPACK_IMPORTED_MODULE_3__.urlHandler;\n    this.vastVersion = null;\n    (0,_bitrate__WEBPACK_IMPORTED_MODULE_7__.updateEstimatedBitrate)(options.byteLength, options.requestDuration);\n  }\n\n  /**\n   * Resolves the next group of ads. If all is true resolves all the remaining ads.\n   * @param  {Boolean} all - If true all the remaining ads are resolved\n   * @return {Promise}\n   */\n  getRemainingAds(all) {\n    if (this.remainingAds.length === 0) {\n      return Promise.reject(\n        new Error('No more ads are available for the given VAST')\n      );\n    }\n\n    const ads = all\n      ? _util_util__WEBPACK_IMPORTED_MODULE_4__.util.flatten(this.remainingAds)\n      : this.remainingAds.shift();\n    this.errorURLTemplates = [];\n    this.parentURLs = [];\n\n    return this.resolveAds(ads, {\n      wrapperDepth: 0,\n      url: this.rootURL,\n    }).then((resolvedAds) => {\n      return this.buildVASTResponse(resolvedAds);\n    });\n  }\n\n  /**\n   * Fetches and parses a VAST for the given url.\n   * Returns a Promise which resolves with a fully parsed VASTResponse or rejects with an Error.\n   * @param  {String} url - The url to request the VAST document.\n   * @param  {Object} options - An optional Object of parameters to be used in the parsing process.\n   * @emits  VASTParser#VAST-resolving\n   * @emits  VASTParser#VAST-resolved\n   * @emits  VASTParser#VAST-warning\n   * @return {Promise}\n   */\n  getAndParseVAST(url, options = {}) {\n    this.initParsingStatus(options);\n\n    this.URLTemplateFilters.forEach((filter) => {\n      url = filter(url);\n    });\n\n    this.rootURL = url;\n\n    return this.fetchVAST(url).then((xml) => {\n      options.previousUrl = url;\n      options.isRootVAST = true;\n      options.url = url;\n\n      return this.parse(xml, options).then((ads) => {\n        return this.buildVASTResponse(ads);\n      });\n    });\n  }\n\n  /**\n   * Parses the given xml Object into a VASTResponse.\n   * Returns a Promise which resolves with a fully parsed VASTResponse or rejects with an Error.\n   * @param  {Object} vastXml - An object representing a vast xml document.\n   * @param  {Object} options - An optional Object of parameters to be used in the parsing process.\n   * @emits  VASTParser#VAST-resolving\n   * @emits  VASTParser#VAST-resolved\n   * @emits  VASTParser#VAST-warning\n   * @return {Promise}\n   */\n  parseVAST(vastXml, options = {}) {\n    this.initParsingStatus(options);\n\n    options.isRootVAST = true;\n\n    return this.parse(vastXml, options).then((ads) => {\n      return this.buildVASTResponse(ads);\n    });\n  }\n\n  /**\n   * Builds a VASTResponse which can be returned.\n   * @param  {Array} ads - An Array of unwrapped ads\n   * @return {Object}\n   */\n  buildVASTResponse(ads) {\n    const response = (0,_vast_response__WEBPACK_IMPORTED_MODULE_5__.createVASTResponse)({\n      ads,\n      errorURLTemplates: this.getErrorURLTemplates(),\n      version: this.vastVersion,\n    });\n    this.completeWrapperResolving(response);\n\n    return response;\n  }\n\n  /**\n   * Parses the given xml Object into an array of ads\n   * Returns the array or throws an `Error` if an invalid VAST XML is provided\n   * @param  {Object} vastXml - An object representing an xml document.\n   * @param  {Object} options - An optional Object of parameters to be used in the parsing process.\n   * @emits  VASTParser#VAST-warning\n   * @emits VASTParser#VAST-ad-parsed\n   * @return {Array}\n   * @throws {Error} `vastXml` must be a valid VAST XMLDocument\n   */\n  parseVastXml(\n    vastXml,\n    {\n      isRootVAST = false,\n      url = null,\n      wrapperDepth = 0,\n      allowMultipleAds,\n      followAdditionalWrappers,\n    }\n  ) {\n    // check if is a valid VAST document\n    if (\n      !vastXml ||\n      !vastXml.documentElement ||\n      vastXml.documentElement.nodeName !== 'VAST'\n    ) {\n      this.emit('VAST-ad-parsed', {\n        type: 'ERROR',\n        url,\n        wrapperDepth,\n      });\n      throw new Error('Invalid VAST XMLDocument');\n    }\n\n    const ads = [];\n    const childNodes = vastXml.documentElement.childNodes;\n\n    /* Only parse the version of the Root VAST for now because we don't know yet how to\n     * handle some cases like multiple wrappers in the same vast\n     */\n    const vastVersion = vastXml.documentElement.getAttribute('version');\n    if (isRootVAST) {\n      if (vastVersion) this.vastVersion = vastVersion;\n    }\n\n    // Fill the VASTResponse object with ads and errorURLTemplates\n    for (const nodeKey in childNodes) {\n      const node = childNodes[nodeKey];\n\n      if (node.nodeName === 'Error') {\n        const errorURLTemplate = _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.parseNodeText(node);\n\n        // Distinguish root VAST url templates from ad specific ones\n        isRootVAST\n          ? this.rootErrorURLTemplates.push(errorURLTemplate)\n          : this.errorURLTemplates.push(errorURLTemplate);\n      } else if (node.nodeName === 'Ad') {\n        // allowMultipleAds was introduced in VAST 3\n        // for retrocompatibility set it to true\n        if (this.vastVersion && parseFloat(this.vastVersion) < 3) {\n          allowMultipleAds = true;\n        } else if (allowMultipleAds === false && ads.length > 1) {\n          // if wrapper allowMultipleAds is set to false only the first stand-alone Ad\n          // (with no sequence values) in the requested VAST response is allowed\n          break;\n        }\n\n        const result = (0,_ad_parser__WEBPACK_IMPORTED_MODULE_0__.parseAd)(node, this.emit.bind(this), {\n          allowMultipleAds,\n          followAdditionalWrappers,\n        });\n\n        if (result.ad) {\n          ads.push(result.ad);\n\n          this.emit('VAST-ad-parsed', {\n            type: result.type,\n            url,\n            wrapperDepth,\n            adIndex: ads.length - 1,\n            vastVersion,\n          });\n        } else {\n          // VAST version of response not supported.\n          this.trackVastError(this.getErrorURLTemplates(), {\n            ERRORCODE: 101,\n          });\n        }\n      }\n    }\n\n    return ads;\n  }\n\n  /**\n   * Parses the given xml Object into an array of unwrapped ads.\n   * Returns a Promise which resolves with the array or rejects with an error according to the result of the parsing.\n   * @param {Object} vastXml - An object representing an xml document.\n   * @param {Object} options - An optional Object of parameters to be used in the parsing process.\n   * @emits VASTParser#VAST-resolving\n   * @emits VASTParser#VAST-resolved\n   * @emits VASTParser#VAST-warning\n   * @return {Promise}\n   */\n  parse(\n    vastXml,\n    {\n      url = null,\n      resolveAll = true,\n      wrapperSequence = null,\n      previousUrl = null,\n      wrapperDepth = 0,\n      isRootVAST = false,\n      followAdditionalWrappers,\n      allowMultipleAds,\n    } = {}\n  ) {\n    let ads = [];\n    // allowMultipleAds was introduced in VAST 3 as wrapper attribute\n    // for retrocompatibility set it to true for vast pre-version 3\n    if (this.vastVersion && parseFloat(this.vastVersion) < 3 && isRootVAST) {\n      allowMultipleAds = true;\n    }\n    try {\n      ads = this.parseVastXml(vastXml, {\n        isRootVAST,\n        url,\n        wrapperDepth,\n        allowMultipleAds,\n        followAdditionalWrappers,\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n\n    /* Keep wrapper sequence value to not break AdPod when wrapper contain only one Ad.\n    e.g,for a AdPod containing :\n    - Inline with sequence=1\n    - Inline with sequence=2\n    - Wrapper with sequence=3 wrapping a Inline with sequence=1\n    once parsed we will obtain :\n    - Inline sequence 1,\n    - Inline sequence 2,\n    - Inline sequence 3\n  */\n    if (\n      ads.length === 1 &&\n      wrapperSequence !== undefined &&\n      wrapperSequence !== null\n    ) {\n      ads[0].sequence = wrapperSequence;\n    }\n\n    // Split the VAST in case we don't want to resolve everything at the first time\n    if (resolveAll === false) {\n      this.remainingAds = _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.splitVAST(ads);\n      // Remove the first element from the remaining ads array, since we're going to resolve that element\n      ads = this.remainingAds.shift();\n    }\n\n    return this.resolveAds(ads, { wrapperDepth, previousUrl, url });\n  }\n\n  /**\n   * Resolves an Array of ads, recursively calling itself with the remaining ads if a no ad\n   * response is returned for the given array.\n   * @param {Array} ads - An array of ads to resolve\n   * @param {Object} options - An options Object containing resolving parameters\n   * @return {Promise}\n   */\n  resolveAds(ads = [], { wrapperDepth, previousUrl, url }) {\n    const resolveWrappersPromises = [];\n    previousUrl = url;\n\n    ads.forEach((ad) => {\n      const resolveWrappersPromise = this.resolveWrappers(\n        ad,\n        wrapperDepth,\n        previousUrl\n      );\n\n      resolveWrappersPromises.push(resolveWrappersPromise);\n    });\n\n    return Promise.all(resolveWrappersPromises).then((unwrappedAds) => {\n      const resolvedAds = _util_util__WEBPACK_IMPORTED_MODULE_4__.util.flatten(unwrappedAds);\n\n      if (!resolvedAds && this.remainingAds.length > 0) {\n        const remainingAdsToResolve = this.remainingAds.shift();\n\n        return this.resolveAds(remainingAdsToResolve, {\n          wrapperDepth,\n          previousUrl,\n          url,\n        });\n      }\n\n      return resolvedAds;\n    });\n  }\n\n  /**\n   * Resolves the wrappers for the given ad in a recursive way.\n   * Returns a Promise which resolves with the unwrapped ad or rejects with an error.\n   * @param {Object} ad - An ad object to be unwrapped.\n   * @param {Number} wrapperDepth - The reached depth in the wrapper resolving chain.\n   * @param {String} previousUrl - The previous vast url.\n   * @return {Promise}\n   */\n  resolveWrappers(ad, wrapperDepth, previousUrl) {\n    return new Promise((resolve) => {\n      // Going one level deeper in the wrapper chain\n      wrapperDepth++;\n      // We already have a resolved VAST ad, no need to resolve wrapper\n      if (!ad.nextWrapperURL) {\n        delete ad.nextWrapperURL;\n        return resolve(ad);\n      }\n\n      if (\n        wrapperDepth >= this.maxWrapperDepth ||\n        this.parentURLs.indexOf(ad.nextWrapperURL) !== -1\n      ) {\n        // Wrapper limit reached, as defined by the video player.\n        // Too many Wrapper responses have been received with no InLine response.\n        ad.errorCode = 302;\n        delete ad.nextWrapperURL;\n        return resolve(ad);\n      }\n\n      // Get full URL\n      ad.nextWrapperURL = _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.resolveVastAdTagURI(\n        ad.nextWrapperURL,\n        previousUrl\n      );\n\n      this.URLTemplateFilters.forEach((filter) => {\n        ad.nextWrapperURL = filter(ad.nextWrapperURL);\n      });\n\n      // If allowMultipleAds is set inside the parameter 'option' of public method\n      // override the vast value by the one provided\n      const allowMultipleAds =\n        this.parsingOptions.allowMultipleAds ?? ad.allowMultipleAds;\n      // sequence doesn't carry over in wrapper element\n      const wrapperSequence = ad.sequence;\n      this.fetchVAST(ad.nextWrapperURL, wrapperDepth, previousUrl)\n        .then((xml) => {\n          return this.parse(xml, {\n            url: ad.nextWrapperURL,\n            previousUrl,\n            wrapperSequence,\n            wrapperDepth,\n            followAdditionalWrappers: ad.followAdditionalWrappers,\n            allowMultipleAds,\n          }).then((unwrappedAds) => {\n            delete ad.nextWrapperURL;\n            if (unwrappedAds.length === 0) {\n              // No ads returned by the wrappedResponse, discard current <Ad><Wrapper> creatives\n              ad.creatives = [];\n              return resolve(ad);\n            }\n\n            unwrappedAds.forEach((unwrappedAd) => {\n              if (unwrappedAd) {\n                _parser_utils__WEBPACK_IMPORTED_MODULE_2__.parserUtils.mergeWrapperAdData(unwrappedAd, ad);\n              }\n            });\n\n            resolve(unwrappedAds);\n          });\n        })\n        .catch((err) => {\n          // Timeout of VAST URI provided in Wrapper element, or of VAST URI provided in a subsequent Wrapper element.\n          // (URI was either unavailable or reached a timeout as defined by the video player.)\n          ad.errorCode = 301;\n          ad.errorMessage = err.message;\n\n          resolve(ad);\n        });\n    });\n  }\n\n  /**\n   * Takes care of handling errors when the wrappers are resolved.\n   * @param {Object} vastResponse - A resolved VASTResponse.\n   */\n  completeWrapperResolving(vastResponse) {\n    // We've to wait for all <Ad> elements to be parsed before handling error so we can:\n    // - Send computed extensions data\n    // - Ping all <Error> URIs defined across VAST files\n\n    // No Ad case - The parser never bump into an <Ad> element\n    if (vastResponse.ads.length === 0) {\n      this.trackVastError(vastResponse.errorURLTemplates, { ERRORCODE: 303 });\n    } else {\n      for (let index = vastResponse.ads.length - 1; index >= 0; index--) {\n        // - Error encountered while parsing\n        // - No Creative case - The parser has dealt with soma <Ad><Wrapper> or/and an <Ad><Inline> elements\n        // but no creative was found\n        const ad = vastResponse.ads[index];\n        if (ad.errorCode || ad.creatives.length === 0) {\n          this.trackVastError(\n            ad.errorURLTemplates.concat(vastResponse.errorURLTemplates),\n            { ERRORCODE: ad.errorCode || 303 },\n            { ERRORMESSAGE: ad.errorMessage || '' },\n            { extensions: ad.extensions },\n            { system: ad.system }\n          );\n          vastResponse.ads.splice(index, 1);\n        }\n      }\n    }\n  }\n}\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/parser/vast_parser.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/url_handler.js":
/*!*****************************************************!*\
  !*** ./node_modules/vast-client/src/url_handler.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"urlHandler\": () => (/* binding */ urlHandler)\n/* harmony export */ });\n/* harmony import */ var _urlhandlers_mock_node_url_handler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./urlhandlers/mock_node_url_handler */ \"./node_modules/vast-client/src/urlhandlers/mock_node_url_handler.js\");\n/* harmony import */ var _urlhandlers_xhr_url_handler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./urlhandlers/xhr_url_handler */ \"./node_modules/vast-client/src/urlhandlers/xhr_url_handler.js\");\n\n\n\nfunction get(url, options, cb) {\n  // Allow skip of the options param\n  if (!cb) {\n    if (typeof options === 'function') {\n      cb = options;\n    }\n    options = {};\n  }\n\n  if (typeof window === 'undefined' || window === null) {\n    return _urlhandlers_mock_node_url_handler__WEBPACK_IMPORTED_MODULE_0__.nodeURLHandler.get(url, options, cb);\n  } else if (_urlhandlers_xhr_url_handler__WEBPACK_IMPORTED_MODULE_1__.XHRURLHandler.supported()) {\n    return _urlhandlers_xhr_url_handler__WEBPACK_IMPORTED_MODULE_1__.XHRURLHandler.get(url, options, cb);\n  }\n  return cb(\n    new Error(\n      'Current context is not supported by any of the default URLHandlers. Please provide a custom URLHandler'\n    )\n  );\n}\n\nconst urlHandler = {\n  get\n};\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/url_handler.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/urlhandlers/consts.js":
/*!************************************************************!*\
  !*** ./node_modules/vast-client/src/urlhandlers/consts.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEFAULT_TIMEOUT\": () => (/* binding */ DEFAULT_TIMEOUT)\n/* harmony export */ });\nconst DEFAULT_TIMEOUT = 120000;\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/urlhandlers/consts.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/urlhandlers/mock_node_url_handler.js":
/*!***************************************************************************!*\
  !*** ./node_modules/vast-client/src/urlhandlers/mock_node_url_handler.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nodeURLHandler\": () => (/* binding */ nodeURLHandler)\n/* harmony export */ });\n// This mock module is loaded in stead of the original NodeURLHandler module\n// when bundling the library for environments which are not node.\n// This allows us to avoid bundling useless node components and have a smaller build.\nfunction get(url, options, cb) {\n  cb(\n    new Error('Please bundle the library for node to use the node urlHandler')\n  );\n}\n\nconst nodeURLHandler = {\n  get\n};\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/urlhandlers/mock_node_url_handler.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/urlhandlers/xhr_url_handler.js":
/*!*********************************************************************!*\
  !*** ./node_modules/vast-client/src/urlhandlers/xhr_url_handler.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"XHRURLHandler\": () => (/* binding */ XHRURLHandler)\n/* harmony export */ });\n/* harmony import */ var _consts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./consts */ \"./node_modules/vast-client/src/urlhandlers/consts.js\");\n\n\nfunction xhr() {\n  try {\n    const request = new window.XMLHttpRequest();\n    if ('withCredentials' in request) {\n      // check CORS support\n      return request;\n    }\n    return null;\n  } catch (err) {\n    return null;\n  }\n}\n\nfunction supported() {\n  return !!xhr();\n}\n\nfunction handleLoad(request, cb) {\n  if (request.status === 200) {\n    cb(null, request.responseXML, {\n      byteLength: request.response.length,\n      statusCode: request.status\n    });\n  } else {\n    handleFail(request, cb, false);\n  }\n}\n\nfunction handleFail(request, cb, isTimeout) {\n  const statusCode = !isTimeout ? request.status : 408; // Request timeout\n  const msg = isTimeout\n    ? `XHRURLHandler: Request timed out after ${\n        request.timeout\n      } ms (${statusCode})`\n    : `XHRURLHandler: ${request.statusText} (${statusCode})`;\n\n  cb(new Error(msg), null, { statusCode });\n}\n\nfunction get(url, options, cb) {\n  if (window.location.protocol === 'https:' && url.indexOf('http://') === 0) {\n    return cb(new Error('XHRURLHandler: Cannot go from HTTPS to HTTP.'));\n  }\n\n  try {\n    const request = xhr();\n\n    request.open('GET', url);\n    request.timeout = options.timeout || _consts__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_TIMEOUT;\n    request.withCredentials = options.withCredentials || false;\n    request.overrideMimeType && request.overrideMimeType('text/xml');\n\n    request.onload = () => handleLoad(request, cb);\n    request.onerror = () => handleFail(request, cb, false);\n    request.onabort = () => handleFail(request, cb, false);\n    request.ontimeout = () => handleFail(request, cb, true);\n\n    request.send();\n  } catch (error) {\n    cb(new Error('XHRURLHandler: Unexpected error'));\n  }\n}\n\nconst XHRURLHandler = {\n  get,\n  supported\n};\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/urlhandlers/xhr_url_handler.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/util/event_emitter.js":
/*!************************************************************!*\
  !*** ./node_modules/vast-client/src/util/event_emitter.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EventEmitter\": () => (/* binding */ EventEmitter)\n/* harmony export */ });\nclass EventEmitter {\n  constructor() {\n    this._handlers = [];\n  }\n\n  /**\n   * Adds the event name and handler function to the end of the handlers array.\n   * No checks are made to see if the handler has already been added.\n   * Multiple calls passing the same combination of event name and handler will result in the handler being added,\n   * and called, multiple times.\n   * @param {String} event\n   * @param {Function} handler\n   * @returns {EventEmitter}\n   */\n  on(event, handler) {\n    if (typeof handler !== 'function') {\n      throw new TypeError(\n        `The handler argument must be of type Function. Received type ${typeof handler}`\n      );\n    }\n    if (!event) {\n      throw new TypeError(\n        `The event argument must be of type String. Received type ${typeof event}`\n      );\n    }\n    this._handlers.push({\n      event,\n      handler\n    });\n\n    return this;\n  }\n\n  /**\n   * Adds a one-time handler function for the named event.\n   * The next time event is triggered, this handler is removed and then invoked.\n   * @param {String} event\n   * @param {Function} handler\n   * @returns {EventEmitter}\n   */\n  once(event, handler) {\n    return this.on(event, onceWrap(this, event, handler));\n  }\n\n  /**\n   * Removes all instances for the specified handler from the handler array for the named event.\n   * @param {String} event\n   * @param {Function} handler\n   * @returns {EventEmitter}\n   */\n  off(event, handler) {\n    this._handlers = this._handlers.filter(item => {\n      return item.event !== event || item.handler !== handler;\n    });\n\n    return this;\n  }\n\n  /**\n   * Synchronously calls each of the handlers registered for the named event,\n   * in the order they were registered, passing the supplied arguments to each.\n   * @param {String} event\n   * @param  {any[]} args\n   * @returns {Boolean} true if the event had handlers, false otherwise.\n   */\n  emit(event, ...args) {\n    let called = false;\n    this._handlers.forEach(item => {\n      if (item.event === '*') {\n        called = true;\n        item.handler(event, ...args);\n      }\n      if (item.event === event) {\n        called = true;\n        item.handler(...args);\n      }\n    });\n    return called;\n  }\n\n  /**\n   * Removes all listeners, or those of the specified named event.\n   * @param {String} event\n   * @returns {EventEmitter}\n   */\n  removeAllListeners(event) {\n    if (!event) {\n      this._handlers = [];\n      return this;\n    }\n\n    this._handlers = this._handlers.filter(item => item.event !== event);\n    return this;\n  }\n\n  /**\n   * Returns the number of listeners listening to the named event.\n   * @param {String} event\n   * @returns {Number}\n   */\n  listenerCount(event) {\n    return this._handlers.filter(item => item.event === event).length;\n  }\n\n  /**\n   * Returns a copy of the array of listeners for the named event including those created by .once().\n   * @param {String} event\n   * @returns {Function[]}\n   */\n  listeners(event) {\n    return this._handlers.reduce((listeners, item) => {\n      if (item.event === event) {\n        listeners.push(item.handler);\n      }\n      return listeners;\n    }, []);\n  }\n\n  /**\n   * Returns an array listing the events for which the emitter has registered handlers.\n   * @returns {String[]}\n   */\n  eventNames() {\n    return this._handlers.map(item => item.event);\n  }\n}\n\nfunction onceWrap(target, event, handler) {\n  const state = {\n    fired: false,\n    wrapFn: undefined\n  };\n\n  function onceWrapper(...args) {\n    if (!state.fired) {\n      target.off(event, state.wrapFn);\n      state.fired = true;\n      handler.bind(target)(...args);\n    }\n  }\n  state.wrapFn = onceWrapper;\n  return onceWrapper;\n}\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/util/event_emitter.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/util/macros.js":
/*!*****************************************************!*\
  !*** ./node_modules/vast-client/src/util/macros.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"supportedMacros\": () => (/* binding */ supportedMacros)\n/* harmony export */ });\nconst supportedMacros = [\n  'ADCATEGORIES',\n  'ADCOUNT',\n  'ADPLAYHEAD',\n  'ADSERVINGID',\n  'ADTYPE',\n  'APIFRAMEWORKS',\n  'APPBUNDLE',\n  'ASSETURI',\n  'BLOCKEDADCATEGORIES',\n  'BREAKMAXADLENGTH',\n  'BREAKMAXADS',\n  'BREAKMAXDURATION',\n  'BREAKMINADLENGTH',\n  'BREAKMINDURATION',\n  'BREAKPOSITION',\n  'CLICKPOS',\n  'CLICKTYPE',\n  'CLIENTUA',\n  'CONTENTID',\n  'CONTENTPLAYHEAD', // @deprecated VAST 4.1\n  'CONTENTURI',\n  'DEVICEIP',\n  'DEVICEUA',\n  'DOMAIN',\n  'EXTENSIONS',\n  'GDPRCONSENT',\n  'IFA',\n  'IFATYPE',\n  'INVENTORYSTATE',\n  'LATLONG',\n  'LIMITADTRACKING',\n  'MEDIAMIME',\n  'MEDIAPLAYHEAD',\n  'OMIDPARTNER',\n  'PAGEURL',\n  'PLACEMENTTYPE',\n  'PLAYERCAPABILITIES',\n  'PLAYERSIZE',\n  'PLAYERSTATE',\n  'PODSEQUENCE',\n  'REGULATIONS',\n  'SERVERSIDE',\n  'SERVERUA',\n  'TRANSACTIONID',\n  'UNIVERSALADID',\n  'VASTVERSIONS',\n  'VERIFICATIONVENDORS'\n];\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/util/macros.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/util/requiredValues.js":
/*!*************************************************************!*\
  !*** ./node_modules/vast-client/src/util/requiredValues.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"requiredValues\": () => (/* binding */ requiredValues)\n/* harmony export */ });\nconst requiredValues = {\n  Wrapper: {\n    subElements: ['VASTAdTagURI', 'Impression']\n  },\n  BlockedAdCategories: {\n    attributes: ['authority']\n  },\n  InLine: {\n    subElements: [\n      'AdSystem',\n      'AdTitle',\n      'Impression',\n      'AdServingId',\n      'Creatives'\n    ]\n  },\n  Category: {\n    attributes: ['authority']\n  },\n  Pricing: {\n    attributes: ['model', 'currency']\n  },\n  Verification: {\n    oneOfinLineResources: ['JavaScriptResource', 'ExecutableResource'],\n    attributes: ['vendor']\n  },\n  UniversalAdId: {\n    attributes: ['idRegistry']\n  },\n  JavaScriptResource: {\n    attributes: ['apiFramework', 'browserOptional']\n  },\n  ExecutableResource: {\n    attributes: ['apiFramework', 'type']\n  },\n  Tracking: {\n    attributes: ['event']\n  },\n  Creatives: {\n    subElements: ['Creative']\n  },\n  Creative: {\n    subElements: ['UniversalAdId']\n  },\n  Linear: {\n    subElements: ['MediaFiles', 'Duration']\n  },\n  MediaFiles: {\n    subElements: ['MediaFile']\n  },\n  MediaFile: {\n    attributes: ['delivery', 'type', 'width', 'height']\n  },\n  Mezzanine: {\n    attributes: ['delivery', 'type', 'width', 'height']\n  },\n  NonLinear: {\n    oneOfinLineResources: ['StaticResource', 'IFrameResource', 'HTMLResource'],\n    attributes: ['width', 'height']\n  },\n  Companion: {\n    oneOfinLineResources: ['StaticResource', 'IFrameResource', 'HTMLResource'],\n    attributes: ['width', 'height']\n  },\n  StaticResource: {\n    attributes: ['creativeType']\n  },\n  Icons: {\n    subElements: ['Icon']\n  },\n  Icon: {\n    oneOfinLineResources: ['StaticResource', 'IFrameResource', 'HTMLResource']\n  }\n};\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/util/requiredValues.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/util/storage.js":
/*!******************************************************!*\
  !*** ./node_modules/vast-client/src/util/storage.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Storage\": () => (/* binding */ Storage)\n/* harmony export */ });\nlet storage = null;\n\n/**\n * This Object represents a default storage to be used in case no other storage is available.\n * @constant\n * @type {Object}\n */\nconst DEFAULT_STORAGE = {\n  data: {},\n  length: 0,\n  getItem(key) {\n    return this.data[key];\n  },\n  setItem(key, value) {\n    this.data[key] = value;\n    this.length = Object.keys(this.data).length;\n  },\n  removeItem(key) {\n    delete this.data[key];\n    this.length = Object.keys(this.data).length;\n  },\n  clear() {\n    this.data = {};\n    this.length = 0;\n  }\n};\n\n/**\n * This class provides an wrapper interface to the a key-value storage.\n * It uses localStorage, sessionStorage or a custom storage if none of the two is available.\n * @export\n * @class Storage\n */\nclass Storage {\n  /**\n   * Creates an instance of Storage.\n   * @constructor\n   */\n  constructor() {\n    this.storage = this.initStorage();\n  }\n\n  /**\n   * Provides a singleton instance of the wrapped storage.\n   * @return {Object}\n   */\n  initStorage() {\n    if (storage) {\n      return storage;\n    }\n\n    try {\n      storage =\n        typeof window !== 'undefined' && window !== null\n          ? window.localStorage || window.sessionStorage\n          : null;\n    } catch (storageError) {\n      storage = null;\n    }\n\n    if (!storage || this.isStorageDisabled(storage)) {\n      storage = DEFAULT_STORAGE;\n      storage.clear();\n    }\n\n    return storage;\n  }\n\n  /**\n   * Check if storage is disabled (like in certain cases with private browsing).\n   * In Safari (Mac + iOS) when private browsing is ON, localStorage is read only\n   * http://spin.atomicobject.com/2013/01/23/ios-private-browsing-localstorage/\n   * @param {Object} testStorage - The storage to check.\n   * @return {Boolean}\n   */\n  isStorageDisabled(testStorage) {\n    const testValue = '__VASTStorage__';\n\n    try {\n      testStorage.setItem(testValue, testValue);\n      if (testStorage.getItem(testValue) !== testValue) {\n        testStorage.removeItem(testValue);\n        return true;\n      }\n    } catch (e) {\n      return true;\n    }\n\n    testStorage.removeItem(testValue);\n    return false;\n  }\n\n  /**\n   * Returns the value for the given key. If the key does not exist, null is returned.\n   * @param  {String} key - The key to retrieve the value.\n   * @return {any}\n   */\n  getItem(key) {\n    return this.storage.getItem(key);\n  }\n\n  /**\n   * Adds or updates the value for the given key.\n   * @param  {String} key - The key to modify the value.\n   * @param  {any} value - The value to be associated with the key.\n   * @return {any}\n   */\n  setItem(key, value) {\n    return this.storage.setItem(key, value);\n  }\n\n  /**\n   * Removes an item for the given key.\n   * @param  {String} key - The key to remove the value.\n   * @return {any}\n   */\n  removeItem(key) {\n    return this.storage.removeItem(key);\n  }\n\n  /**\n   * Removes all the items from the storage.\n   */\n  clear() {\n    return this.storage.clear();\n  }\n}\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/util/storage.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/util/util.js":
/*!***************************************************!*\
  !*** ./node_modules/vast-client/src/util/util.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"util\": () => (/* binding */ util)\n/* harmony export */ });\n/* harmony import */ var _macros__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./macros */ \"./node_modules/vast-client/src/util/macros.js\");\n\n\nfunction track(URLTemplates, macros, options) {\n  const URLs = resolveURLTemplates(URLTemplates, macros, options);\n\n  URLs.forEach(URL => {\n    if (typeof window !== 'undefined' && window !== null) {\n      const i = new Image();\n      i.src = URL;\n    }\n  });\n}\n\n/**\n * Replace the provided URLTemplates with the given values\n *\n * @param {Array} URLTemplates - An array of tracking url templates.\n * @param {Object} [macros={}] - An optional Object of parameters to be used in the tracking calls.\n * @param {Object} [options={}] - An optional Object of options to be used in the tracking calls.\n */\nfunction resolveURLTemplates(URLTemplates, macros = {}, options = {}) {\n  const resolvedURLs = [];\n  const URLArray = extractURLsFromTemplates(URLTemplates);\n\n  // Set default value for invalid ERRORCODE\n  if (\n    macros['ERRORCODE'] &&\n    !options.isCustomCode &&\n    !/^[0-9]{3}$/.test(macros['ERRORCODE'])\n  ) {\n    macros['ERRORCODE'] = 900;\n  }\n\n  // Calc random/time based macros\n  macros['CACHEBUSTING'] = leftpad(\n    Math.round(Math.random() * 1.0e8).toString()\n  );\n  macros['TIMESTAMP'] = new Date().toISOString();\n\n  // RANDOM/random is not defined in VAST 3/4 as a valid macro tho it's used by some adServer (Auditude)\n  macros['RANDOM'] = macros['random'] = macros['CACHEBUSTING'];\n\n  for (const macro in macros) {\n    macros[macro] = encodeURIComponentRFC3986(macros[macro]);\n  }\n\n  for (const URLTemplateKey in URLArray) {\n    const resolveURL = URLArray[URLTemplateKey];\n\n    if (typeof resolveURL !== 'string') {\n      continue;\n    }\n    resolvedURLs.push(replaceUrlMacros(resolveURL, macros));\n  }\n  return resolvedURLs;\n}\n\n/**\n * Replace the macros tracking url with their value.\n * If no value is provided for a supported macro and it exists in the url,\n * it will be replaced by -1 as described by the VAST 4.1 iab specifications\n *\n * @param {String} url - Tracking url.\n * @param {Object} macros - Object of macros to be replaced in the tracking calls\n */\nfunction replaceUrlMacros(url, macros) {\n  url = replaceMacrosValues(url, macros);\n  // match any macros from the url that was not replaced\n  const remainingMacros = url.match(/[^[\\]]+(?=])/g);\n  if (!remainingMacros) {\n    return url;\n  }\n\n  let supportedRemainingMacros = remainingMacros.filter(\n    macro => _macros__WEBPACK_IMPORTED_MODULE_0__.supportedMacros.indexOf(macro) > -1\n  );\n  if (supportedRemainingMacros.length === 0) {\n    return url;\n  }\n\n  supportedRemainingMacros = supportedRemainingMacros.reduce(\n    (accumulator, macro) => {\n      accumulator[macro] = -1;\n      return accumulator;\n    },\n    {}\n  );\n  return replaceMacrosValues(url, supportedRemainingMacros);\n}\n\n/**\n * Replace the macros tracking url with their value.\n *\n * @param {String} url - Tracking url.\n * @param {Object} macros - Object of macros to be replaced in the tracking calls\n */\nfunction replaceMacrosValues(url, macros) {\n  let replacedMacrosUrl = url;\n  for (const key in macros) {\n    const value = macros[key];\n    // this will match [${key}] and %%${key}%% and replace it\n    replacedMacrosUrl = replacedMacrosUrl.replace(\n      new RegExp(`(?:\\\\[|%%)(${key})(?:\\\\]|%%)`, 'g'),\n      value\n    );\n  }\n  return replacedMacrosUrl;\n}\n\n/**\n * Extract the url/s from the URLTemplates.\n *   If the URLTemplates is an array of urls\n *   If the URLTemplates object has a url property\n *   If the URLTemplates is a single string\n *\n * @param {Array|String} URLTemplates - An array|string of url templates.\n */\nfunction extractURLsFromTemplates(URLTemplates) {\n  if (Array.isArray(URLTemplates)) {\n    return URLTemplates.map(URLTemplate => {\n      return URLTemplate && URLTemplate.hasOwnProperty('url')\n        ? URLTemplate.url\n        : URLTemplate;\n    });\n  }\n  return URLTemplates;\n}\n\n/**\n * Returns a boolean after checking if the object exists in the array.\n *   true - if the object exists, false otherwise\n *\n * @param {Object} obj - The object who existence is to be checked.\n * @param {Array} list - List of objects.\n */\nfunction containsTemplateObject(obj, list) {\n  for (let i = 0; i < list.length; i++) {\n    if (isTemplateObjectEqual(list[i], obj)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Returns a boolean after comparing two Template objects.\n *   true - if the objects are equivalent, false otherwise\n *\n * @param {Object} obj1\n * @param {Object} obj2\n */\nfunction isTemplateObjectEqual(obj1, obj2) {\n  if (obj1 && obj2) {\n    const obj1Properties = Object.getOwnPropertyNames(obj1);\n    const obj2Properties = Object.getOwnPropertyNames(obj2);\n\n    // If number of properties is different, objects are not equivalent\n    if (obj1Properties.length !== obj2Properties.length) {\n      return false;\n    }\n\n    if (obj1.id !== obj2.id || obj1.url !== obj2.url) {\n      return false;\n    }\n    return true;\n  }\n  return false;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\nfunction encodeURIComponentRFC3986(str) {\n  return encodeURIComponent(str).replace(\n    /[!'()*]/g,\n    c => `%${c.charCodeAt(0).toString(16)}`\n  );\n}\n\nfunction leftpad(input, len = 8) {\n  const str = String(input);\n  if (str.length < len) {\n    return (\n      range(0, len - str.length, false)\n        .map(() => '0')\n        .join('') + str\n    );\n  }\n  return str;\n}\n\nfunction range(left, right, inclusive) {\n  const result = [];\n  const ascending = left < right;\n  const end = !inclusive ? right : ascending ? right + 1 : right - 1;\n\n  for (let i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n    result.push(i);\n  }\n  return result;\n}\n\nfunction isNumeric(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\nfunction flatten(arr) {\n  return arr.reduce((flat, toFlatten) => {\n    return flat.concat(\n      Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten\n    );\n  }, []);\n}\n\n/**\n * Joins two arrays of objects without duplicates\n *\n * @param {Array} arr1\n * @param {Array} arr2\n *\n * @return {Array}\n */\nfunction joinArrayOfUniqueTemplateObjs(arr1 = [], arr2 = []) {\n  const firstArr = Array.isArray(arr1) ? arr1 : [];\n  const secondArr = Array.isArray(arr2) ? arr2 : [];\n  const arr = firstArr.concat(secondArr);\n\n  return arr.reduce((res, val) => {\n    if (!containsTemplateObject(val, res)) {\n      res.push(val);\n    }\n    return res;\n  }, []);\n}\n\nconst util = {\n  track,\n  resolveURLTemplates,\n  extractURLsFromTemplates,\n  containsTemplateObject,\n  isTemplateObjectEqual,\n  encodeURIComponentRFC3986,\n  replaceUrlMacros,\n  leftpad,\n  range,\n  isNumeric,\n  flatten,\n  joinArrayOfUniqueTemplateObjs\n};\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/util/util.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/vast_client.js":
/*!*****************************************************!*\
  !*** ./node_modules/vast-client/src/vast_client.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"VASTClient\": () => (/* binding */ VASTClient)\n/* harmony export */ });\n/* harmony import */ var _util_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/storage */ \"./node_modules/vast-client/src/util/storage.js\");\n/* harmony import */ var _parser_vast_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parser/vast_parser */ \"./node_modules/vast-client/src/parser/vast_parser.js\");\n\n\n\n/**\n * This class provides methods to fetch and parse a VAST document using VASTParser.\n * In addition it provides options to skip consecutive calls based on constraints.\n * @export\n * @class VASTClient\n */\nclass VASTClient {\n  /**\n   * Creates an instance of VASTClient.\n   * @param  {Number} cappingFreeLunch - The number of first calls to skip.\n   * @param  {Number} cappingMinimumTimeInterval - The minimum time interval between two consecutive calls.\n   * @param  {Storage} customStorage - A custom storage to use instead of the default one.\n   * @constructor\n   */\n  constructor(cappingFreeLunch, cappingMinimumTimeInterval, customStorage) {\n    this.cappingFreeLunch = cappingFreeLunch || 0;\n    this.cappingMinimumTimeInterval = cappingMinimumTimeInterval || 0;\n    this.defaultOptions = {\n      withCredentials: false,\n      timeout: 0\n    };\n    this.vastParser = new _parser_vast_parser__WEBPACK_IMPORTED_MODULE_1__.VASTParser();\n    this.storage = customStorage || new _util_storage__WEBPACK_IMPORTED_MODULE_0__.Storage();\n\n    // Init values if not already set\n    if (this.lastSuccessfulAd === undefined) {\n      this.lastSuccessfulAd = 0;\n    }\n\n    if (this.totalCalls === undefined) {\n      this.totalCalls = 0;\n    }\n    if (this.totalCallsTimeout === undefined) {\n      this.totalCallsTimeout = 0;\n    }\n  }\n\n  getParser() {\n    return this.vastParser;\n  }\n\n  get lastSuccessfulAd() {\n    return this.storage.getItem('vast-client-last-successful-ad');\n  }\n\n  set lastSuccessfulAd(value) {\n    this.storage.setItem('vast-client-last-successful-ad', value);\n  }\n\n  get totalCalls() {\n    return this.storage.getItem('vast-client-total-calls');\n  }\n\n  set totalCalls(value) {\n    this.storage.setItem('vast-client-total-calls', value);\n  }\n\n  get totalCallsTimeout() {\n    return this.storage.getItem('vast-client-total-calls-timeout');\n  }\n\n  set totalCallsTimeout(value) {\n    this.storage.setItem('vast-client-total-calls-timeout', value);\n  }\n\n  /**\n   * Returns a boolean indicating if there are more ads to resolve for the current parsing.\n   * @return {Boolean}\n   */\n  hasRemainingAds() {\n    return this.vastParser.remainingAds.length > 0;\n  }\n\n  /**\n   * Resolves the next group of ads. If all is true resolves all the remaining ads.\n   * @param  {Boolean} all - If true all the remaining ads are resolved\n   * @return {Promise}\n   */\n  getNextAds(all) {\n    return this.vastParser.getRemainingAds(all);\n  }\n\n  /**\n   * Gets a parsed VAST document for the given url, applying the skipping rules defined.\n   * Returns a Promise which resolves with a fully parsed VASTResponse or rejects with an Error.\n   * @param  {String} url - The url to use to fecth the VAST document.\n   * @param  {Object} options - An optional Object of parameters to be applied in the process.\n   * @return {Promise}\n   */\n  get(url, options = {}) {\n    const now = Date.now();\n    options = Object.assign({}, this.defaultOptions, options);\n\n    // By default the client resolves only the first Ad or AdPod\n    if (!options.hasOwnProperty('resolveAll')) {\n      options.resolveAll = false;\n    }\n\n    // Check totalCallsTimeout (first call + 1 hour), if older than now,\n    // reset totalCalls number, by this way the client will be eligible again\n    // for freelunch capping\n    if (this.totalCallsTimeout < now) {\n      this.totalCalls = 1;\n      this.totalCallsTimeout = now + 60 * 60 * 1000;\n    } else {\n      this.totalCalls++;\n    }\n\n    return new Promise((resolve, reject) => {\n      if (this.cappingFreeLunch >= this.totalCalls) {\n        return reject(\n          new Error(\n            `VAST call canceled – FreeLunch capping not reached yet ${\n              this.totalCalls\n            }/${this.cappingFreeLunch}`\n          )\n        );\n      }\n\n      const timeSinceLastCall = now - this.lastSuccessfulAd;\n\n      // Check timeSinceLastCall to be a positive number. If not, this mean the\n      // previous was made in the future. We reset lastSuccessfulAd value\n      if (timeSinceLastCall < 0) {\n        this.lastSuccessfulAd = 0;\n      } else if (timeSinceLastCall < this.cappingMinimumTimeInterval) {\n        return reject(\n          new Error(\n            `VAST call canceled – (${\n              this.cappingMinimumTimeInterval\n            })ms minimum interval reached`\n          )\n        );\n      }\n\n      this.vastParser\n        .getAndParseVAST(url, options)\n        .then(response => resolve(response))\n        .catch(err => reject(err));\n    });\n  }\n}\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/vast_client.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/vast_response.js":
/*!*******************************************************!*\
  !*** ./node_modules/vast-client/src/vast_response.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createVASTResponse\": () => (/* binding */ createVASTResponse)\n/* harmony export */ });\nfunction createVASTResponse({ ads, errorURLTemplates, version }) {\n  return {\n    ads: ads || [],\n    errorURLTemplates: errorURLTemplates || [],\n    version: version || null\n  };\n}\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/vast_response.js?");

/***/ }),

/***/ "./node_modules/vast-client/src/vast_tracker.js":
/*!******************************************************!*\
  !*** ./node_modules/vast-client/src/vast_tracker.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"VASTTracker\": () => (/* binding */ VASTTracker)\n/* harmony export */ });\n/* harmony import */ var _companion_ad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./companion_ad */ \"./node_modules/vast-client/src/companion_ad.js\");\n/* harmony import */ var _creative_creative_linear__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./creative/creative_linear */ \"./node_modules/vast-client/src/creative/creative_linear.js\");\n/* harmony import */ var _util_event_emitter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/event_emitter */ \"./node_modules/vast-client/src/util/event_emitter.js\");\n/* harmony import */ var _non_linear_ad__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./non_linear_ad */ \"./node_modules/vast-client/src/non_linear_ad.js\");\n/* harmony import */ var _util_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util/util */ \"./node_modules/vast-client/src/util/util.js\");\n\n\n\n\n\n\n/**\n * The default skip delay used in case a custom one is not provided\n * @constant\n * @type {Number}\n */\nconst DEFAULT_SKIP_DELAY = -1;\n\n/**\n * This class provides methods to track an ad execution.\n *\n * @export\n * @class VASTTracker\n * @extends EventEmitter\n */\nclass VASTTracker extends _util_event_emitter__WEBPACK_IMPORTED_MODULE_2__.EventEmitter {\n  /**\n   * Creates an instance of VASTTracker.\n   *\n   * @param {VASTClient} client - An instance of VASTClient that can be updated by the tracker. [optional]\n   * @param {Ad} ad - The ad to track.\n   * @param {Creative} creative - The creative to track.\n   * @param {Object} [variation=null] - An optional variation of the creative.\n   * @constructor\n   */\n  constructor(client, ad, creative, variation = null) {\n    super();\n    this.ad = ad;\n    this.creative = creative;\n    this.variation = variation;\n    this.muted = false;\n    this.impressed = false;\n    this.skippable = false;\n    this.trackingEvents = {};\n    // We need to keep the last percentage of the tracker in order to\n    // calculate to trigger the events when the VAST duration is short\n    this.lastPercentage = 0;\n    this._alreadyTriggeredQuartiles = {};\n    // Tracker listeners should be notified with some events\n    // no matter if there is a tracking URL or not\n    this.emitAlwaysEvents = [\n      'creativeView',\n      'start',\n      'firstQuartile',\n      'midpoint',\n      'thirdQuartile',\n      'complete',\n      'resume',\n      'pause',\n      'rewind',\n      'skip',\n      'closeLinear',\n      'close',\n    ];\n\n    // Duplicate the creative's trackingEvents property so we can alter it\n    for (const eventName in this.creative.trackingEvents) {\n      const events = this.creative.trackingEvents[eventName];\n      this.trackingEvents[eventName] = events.slice(0);\n    }\n\n    // Nonlinear and companion creatives provide some tracking information at a variation level\n    // While linear creatives provided that at a creative level. That's why we need to\n    // differentiate how we retrieve some tracking information.\n    if ((0,_creative_creative_linear__WEBPACK_IMPORTED_MODULE_1__.isCreativeLinear)(this.creative)) {\n      this._initLinearTracking();\n    } else {\n      this._initVariationTracking();\n    }\n\n    // If the tracker is associated with a client we add a listener to the start event\n    // to update the lastSuccessfulAd property.\n    if (client) {\n      this.on('start', () => {\n        client.lastSuccessfulAd = Date.now();\n      });\n    }\n  }\n\n  /**\n   * Init the custom tracking options for linear creatives.\n   *\n   * @return {void}\n   */\n  _initLinearTracking() {\n    this.linear = true;\n    this.skipDelay = this.creative.skipDelay;\n\n    this.setDuration(this.creative.duration);\n\n    this.clickThroughURLTemplate = this.creative.videoClickThroughURLTemplate;\n    this.clickTrackingURLTemplates = this.creative.videoClickTrackingURLTemplates;\n  }\n\n  /**\n   * Init the custom tracking options for nonlinear and companion creatives.\n   * These options are provided in the variation Object.\n   *\n   * @return {void}\n   */\n  _initVariationTracking() {\n    this.linear = false;\n    this.skipDelay = DEFAULT_SKIP_DELAY;\n\n    // If no variation has been provided there's nothing else to set\n    if (!this.variation) {\n      return;\n    }\n\n    // Duplicate the variation's trackingEvents property so we can alter it\n    for (const eventName in this.variation.trackingEvents) {\n      const events = this.variation.trackingEvents[eventName];\n\n      // If for the given eventName we already had some trackingEvents provided by the creative\n      // we want to keep both the creative trackingEvents and the variation ones\n      if (this.trackingEvents[eventName]) {\n        this.trackingEvents[eventName] = this.trackingEvents[eventName].concat(\n          events.slice(0)\n        );\n      } else {\n        this.trackingEvents[eventName] = events.slice(0);\n      }\n    }\n\n    if ((0,_non_linear_ad__WEBPACK_IMPORTED_MODULE_3__.isNonLinearAd)(this.variation)) {\n      this.clickThroughURLTemplate = this.variation.nonlinearClickThroughURLTemplate;\n      this.clickTrackingURLTemplates = this.variation.nonlinearClickTrackingURLTemplates;\n      this.setDuration(this.variation.minSuggestedDuration);\n    } else if ((0,_companion_ad__WEBPACK_IMPORTED_MODULE_0__.isCompanionAd)(this.variation)) {\n      this.clickThroughURLTemplate = this.variation.companionClickThroughURLTemplate;\n      this.clickTrackingURLTemplates = this.variation.companionClickTrackingURLTemplates;\n    }\n  }\n\n  /**\n   * Sets the duration of the ad and updates the quartiles based on that.\n   *\n   * @param  {Number} duration - The duration of the ad.\n   */\n  setDuration(duration) {\n    this.assetDuration = duration;\n    // beware of key names, theses are also used as event names\n    this.quartiles = {\n      firstQuartile: Math.round(25 * this.assetDuration) / 100,\n      midpoint: Math.round(50 * this.assetDuration) / 100,\n      thirdQuartile: Math.round(75 * this.assetDuration) / 100,\n    };\n  }\n\n  /**\n   * Sets the duration of the ad and updates the quartiles based on that.\n   * This is required for tracking time related events.\n   *\n   * @param {Number} progress - Current playback time in seconds.\n   * @param {Object} [macros={}] - An optional Object containing macros and their values to be used and replaced in the tracking calls.\n   * @emits VASTTracker#start\n   * @emits VASTTracker#skip-countdown\n   * @emits VASTTracker#progress-[0-100]%\n   * @emits VASTTracker#progress-[currentTime]\n   * @emits VASTTracker#rewind\n   * @emits VASTTracker#firstQuartile\n   * @emits VASTTracker#midpoint\n   * @emits VASTTracker#thirdQuartile\n   */\n  setProgress(progress, macros = {}) {\n    const skipDelay = this.skipDelay || DEFAULT_SKIP_DELAY;\n\n    if (skipDelay !== -1 && !this.skippable) {\n      if (skipDelay > progress) {\n        this.emit('skip-countdown', skipDelay - progress);\n      } else {\n        this.skippable = true;\n        this.emit('skip-countdown', 0);\n      }\n    }\n\n    if (this.assetDuration > 0) {\n      const percent = Math.round((progress / this.assetDuration) * 100);\n      const events = [];\n      if (progress > 0) {\n        events.push('start');\n        for (let i = this.lastPercentage; i < percent; i++) {\n          events.push(`progress-${i + 1}%`);\n        }\n        events.push(`progress-${Math.round(progress)}`);\n        for (const quartile in this.quartiles) {\n          if (\n            this.isQuartileReached(quartile, this.quartiles[quartile], progress)\n          ) {\n            events.push(quartile);\n            this._alreadyTriggeredQuartiles[quartile] = true;\n          }\n        }\n        this.lastPercentage = percent;\n      }\n      events.forEach((eventName) => {\n        this.track(eventName, { macros, once: true });\n      });\n\n      if (progress < this.progress) {\n        this.track('rewind', { macros });\n      }\n    }\n\n    this.progress = progress;\n  }\n\n  /**\n   * Checks if a quartile has been reached without have being triggered already.\n   *\n   * @param {String} quartile - Quartile name\n   * @param {Number} time - Time offset, when this quartile is reached in seconds.\n   * @param {Number} progress - Current progress of the ads in seconds.\n   *\n   * @return {Boolean}\n   */\n  isQuartileReached(quartile, time, progress) {\n    let quartileReached = false;\n    // if quartile time already reached and never triggered\n    if (time <= progress && !this._alreadyTriggeredQuartiles[quartile]) {\n      quartileReached = true;\n    }\n    return quartileReached;\n  }\n\n  /**\n   * Updates the mute state and calls the mute/unmute tracking URLs.\n   *\n   * @param {Boolean} muted - Indicates if the video is muted or not.\n   * @param {Object} [macros={}] - An optional Object containing macros and their values to be used and replaced in the tracking calls.\n   * @emits VASTTracker#mute\n   * @emits VASTTracker#unmute\n   */\n  setMuted(muted, macros = {}) {\n    if (this.muted !== muted) {\n      this.track(muted ? 'mute' : 'unmute', { macros });\n    }\n    this.muted = muted;\n  }\n\n  /**\n   * Update the pause state and call the resume/pause tracking URLs.\n   *\n   * @param {Boolean} paused - Indicates if the video is paused or not.\n   * @param {Object} [macros={}] - An optional Object containing macros and their values to be used and replaced in the tracking calls.\n   * @emits VASTTracker#pause\n   * @emits VASTTracker#resume\n   */\n  setPaused(paused, macros = {}) {\n    if (this.paused !== paused) {\n      this.track(paused ? 'pause' : 'resume', { macros });\n    }\n    this.paused = paused;\n  }\n\n  /**\n   * Updates the fullscreen state and calls the fullscreen tracking URLs.\n   *\n   * @param {Boolean} fullscreen - Indicates if the video is in fulscreen mode or not.\n   * @param {Object} [macros={}] - An optional Object containing macros and their values to be used and replaced in the tracking calls.\n   * @emits VASTTracker#fullscreen\n   * @emits VASTTracker#exitFullscreen\n   */\n  setFullscreen(fullscreen, macros = {}) {\n    if (this.fullscreen !== fullscreen) {\n      this.track(fullscreen ? 'fullscreen' : 'exitFullscreen', { macros });\n    }\n    this.fullscreen = fullscreen;\n  }\n\n  /**\n   * Updates the expand state and calls the expand/collapse tracking URLs.\n   *\n   * @param {Boolean} expanded - Indicates if the video is expanded or not.\n   * @param {Object} [macros={}] - An optional Object containing macros and their values to be used and replaced in the tracking calls.\n   * @emits VASTTracker#expand\n   * @emits VASTTracker#playerExpand\n   * @emits VASTTracker#collapse\n   * @emits VASTTracker#playerCollapse\n   */\n  setExpand(expanded, macros = {}) {\n    if (this.expanded !== expanded) {\n      this.track(expanded ? 'expand' : 'collapse', { macros });\n      this.track(expanded ? 'playerExpand' : 'playerCollapse', { macros });\n    }\n    this.expanded = expanded;\n  }\n\n  /**\n   * Must be called if you want to overwrite the <Linear> Skipoffset value.\n   * This will init the skip countdown duration. Then, every time setProgress() is called,\n   * it will decrease the countdown and emit a skip-countdown event with the remaining time.\n   * Do not call this method if you want to keep the original Skipoffset value.\n   *\n   * @param {Number} duration - The time in seconds until the skip button is displayed.\n   */\n  setSkipDelay(duration) {\n    if (typeof duration === 'number') {\n      this.skipDelay = duration;\n    }\n  }\n\n  /**\n   * Tracks an impression (can be called only once).\n   * @param {Object} [macros={}] - An optional Object containing macros and their values to be used and replaced in the tracking calls.\n   * @emits VASTTracker#creativeView\n   */\n  trackImpression(macros = {}) {\n    if (!this.impressed) {\n      this.impressed = true;\n      this.trackURLs(this.ad.impressionURLTemplates, macros);\n      this.track('creativeView', { macros });\n    }\n  }\n\n  /**\n   * Send a request to the URI provided by the VAST <Error> element.\n   * @param {Object} [macros={}] - An optional Object containing macros and their values to be used and replaced in the tracking calls.\n   * @param {Boolean} [isCustomCode=false] - Flag to allow custom values on error code.\n   */\n  error(macros = {}, isCustomCode = false) {\n    this.trackURLs(this.ad.errorURLTemplates, macros, { isCustomCode });\n  }\n\n  /**\n   * Send a request to the URI provided by the VAST <Error> element.\n   * If an [ERRORCODE] macro is included, it will be substitute with errorCode.\n   * @deprecated\n   * @param {String} errorCode - Replaces [ERRORCODE] macro. [ERRORCODE] values are listed in the VAST specification.\n   * @param {Boolean} [isCustomCode=false] - Flag to allow custom values on error code.\n   */\n  errorWithCode(errorCode, isCustomCode = false) {\n    this.error({ ERRORCODE: errorCode }, isCustomCode);\n    //eslint-disable-next-line\n    console.log(\n      'The method errorWithCode is deprecated, please use vast tracker error method instead'\n    );\n  }\n\n  /**\n   * Must be called when the user watched the linear creative until its end.\n   * Calls the complete tracking URLs.\n   *\n   * @param {Object} [macros={}] - An optional Object containing macros and their values to be used and replaced in the tracking calls.\n   * @emits VASTTracker#complete\n   */\n  complete(macros = {}) {\n    this.track('complete', { macros });\n  }\n\n  /**\n   * Must be called if the ad was not and will not be played\n   * This is a terminal event; no other tracking events should be sent when this is used.\n   * Calls the notUsed tracking URLs.\n   *\n   * @param {Object} [macros={}] - An optional Object containing macros and their values to be used and replaced in the tracking calls.\n   * @emits VASTTracker#notUsed\n   */\n  notUsed(macros = {}) {\n    this.track('notUsed', { macros });\n    this.trackingEvents = [];\n  }\n\n  /**\n   * An optional metric that can capture all other user interactions\n   * under one metric such as hover-overs, or custom clicks. It should NOT replace\n   * clickthrough events or other existing events like mute, unmute, pause, etc.\n   * Calls the otherAdInteraction tracking URLs.\n   *\n   * @param {Object} [macros={}] - An optional Object containing macros and their values to be used and replaced in the tracking calls.\n   * @emits VASTTracker#otherAdInteraction\n   */\n  otherAdInteraction(macros = {}) {\n    this.track('otherAdInteraction', { macros });\n  }\n\n  /**\n   * Must be called if the user clicked or otherwise activated a control used to\n   * pause streaming content,* which either expands the ad within the player’s\n   * viewable area or “takes-over” the streaming content area by launching\n   * additional portion of the ad.\n   * Calls the acceptInvitation tracking URLs.\n   *\n   * @param {Object} [macros={}] - An optional Object containing macros and their values to be used and replaced in the tracking calls.\n   * @emits VASTTracker#acceptInvitation\n   */\n  acceptInvitation(macros = {}) {\n    this.track('acceptInvitation', { macros });\n  }\n\n  /**\n   * Must be called if user activated a control to expand the creative.\n   * Calls the adExpand tracking URLs.\n   *\n   * @param {Object} [macros={}] - An optional Object containing macros and their values to be used and replaced in the tracking calls.\n   * @emits VASTTracker#adExpand\n   */\n  adExpand(macros = {}) {\n    this.track('adExpand', { macros });\n  }\n\n  /**\n   * Must be called when the user activated a control to reduce the creative to its original dimensions.\n   * Calls the adCollapse tracking URLs.\n   *\n   * @param {Object} [macros={}] - An optional Object containing macros and their values to be used and replaced in the tracking calls.\n   * @emits VASTTracker#adCollapse\n   */\n  adCollapse(macros = {}) {\n    this.track('adCollapse', { macros });\n  }\n\n  /**\n   * Must be called if the user clicked or otherwise activated a control used to minimize the ad.\n   * Calls the minimize tracking URLs.\n   *\n   * @param {Object} [macros={}] - An optional Object containing macros and their values to be used and replaced in the tracking calls.\n   * @emits VASTTracker#minimize\n   */\n  minimize(macros = {}) {\n    this.track('minimize', { macros });\n  }\n\n  /**\n   * Must be called if the player did not or was not able to execute the provided\n   * verification code.The [REASON] macro must be filled with reason code\n   * Calls the verificationNotExecuted tracking URL of associated verification vendor.\n   *\n   * @param {String} vendor - An identifier for the verification vendor. The recommended format is [domain]-[useCase], to avoid name collisions. For example, \"company.com-omid\".\n   * @param {Object} [macros={}] - An optional Object containing macros and their values to be used and replaced in the tracking calls.\n   * @emits VASTTracker#verificationNotExecuted\n   */\n  verificationNotExecuted(vendor, macros = {}) {\n    if (\n      !this.ad ||\n      !this.ad.adVerifications ||\n      !this.ad.adVerifications.length\n    ) {\n      throw new Error('No adVerifications provided');\n    }\n\n    if (!vendor) {\n      throw new Error(\n        'No vendor provided, unable to find associated verificationNotExecuted'\n      );\n    }\n\n    const vendorVerification = this.ad.adVerifications.find(\n      (verifications) => verifications.vendor === vendor\n    );\n\n    if (!vendorVerification) {\n      throw new Error(\n        `No associated verification element found for vendor: ${vendor}`\n      );\n    }\n    const vendorTracking = vendorVerification.trackingEvents;\n\n    if (vendorTracking && vendorTracking.verificationNotExecuted) {\n      const verifsNotExecuted = vendorTracking.verificationNotExecuted;\n      this.trackURLs(verifsNotExecuted, macros);\n      this.emit('verificationNotExecuted', {\n        trackingURLTemplates: verifsNotExecuted,\n      });\n    }\n  }\n\n  /**\n   * The time that the initial ad is displayed. This time is based on\n   * the time between the impression and either the completed length of display based\n   * on the agreement between transactional parties or a close, minimize, or accept\n   * invitation event.\n   * The time will be passed using [ADPLAYHEAD] macros for VAST 4.1\n   * Calls the overlayViewDuration tracking URLs.\n   *\n   * @param {String} duration - The time that the initial ad is displayed.\n   * @param {Object} [macros={}] - An optional Object containing macros and their values to be used and replaced in the tracking calls.\n   * @emits VASTTracker#overlayViewDuration\n   */\n  overlayViewDuration(duration, macros = {}) {\n    macros['ADPLAYHEAD'] = duration;\n    this.track('overlayViewDuration', { macros });\n  }\n\n  /**\n   * Must be called when the player or the window is closed during the ad.\n   * Calls the `closeLinear` (in VAST 3.0 and 4.1) and `close` tracking URLs.\n   * @param {Object} [macros={}] - An optional Object containing macros and their values to be used and replaced in the tracking calls.\n   *\n   * @emits VASTTracker#closeLinear\n   * @emits VASTTracker#close\n   */\n  close(macros = {}) {\n    this.track(this.linear ? 'closeLinear' : 'close', { macros });\n  }\n\n  /**\n   * Must be called when the skip button is clicked. Calls the skip tracking URLs.\n   * @param {Object} [macros={}] - An optional Object containing macros and their values to be used and replaced in the tracking calls.\n   *\n   * @emits VASTTracker#skip\n   */\n  skip(macros = {}) {\n    this.track('skip', { macros });\n  }\n\n  /**\n   * Must be called then loaded and buffered the creative’s media and assets either fully\n   * or to the extent that it is ready to play the media\n   * Calls the loaded tracking URLs.\n   * @param {Object} [macros={}] - An optional Object containing macros and their values to be used and replaced in the tracking calls.\n   *\n   * @emits VASTTracker#loaded\n   */\n  load(macros = {}) {\n    this.track('loaded', { macros });\n  }\n\n  /**\n   * Must be called when the user clicks on the creative.\n   * It calls the tracking URLs and emits a 'clickthrough' event with the resolved\n   * clickthrough URL when done.\n   *\n   * @param {String} [fallbackClickThroughURL=null] - an optional clickThroughURL template that could be used as a fallback\n   * @param {Object} [macros={}] - An optional Object containing macros and their values to be used and replaced in the tracking calls.\n   * @emits VASTTracker#clickthrough\n   */\n  click(fallbackClickThroughURL = null, macros = {}) {\n    if (\n      this.clickTrackingURLTemplates &&\n      this.clickTrackingURLTemplates.length\n    ) {\n      this.trackURLs(this.clickTrackingURLTemplates, macros);\n    }\n\n    // Use the provided fallbackClickThroughURL as a fallback\n    const clickThroughURLTemplate =\n      this.clickThroughURLTemplate || fallbackClickThroughURL;\n    // clone second usage of macros, which get mutated inside resolveURLTemplates\n    const clonedMacros = { ...macros };\n\n    if (clickThroughURLTemplate) {\n      if (this.progress) {\n        clonedMacros['ADPLAYHEAD'] = this.progressFormatted();\n      }\n      const clickThroughURL = _util_util__WEBPACK_IMPORTED_MODULE_4__.util.resolveURLTemplates(\n        [clickThroughURLTemplate],\n        clonedMacros\n      )[0];\n\n      this.emit('clickthrough', clickThroughURL);\n    }\n  }\n\n  /**\n   * Calls the tracking URLs for the given eventName and emits the event.\n   *\n   * @param {String} eventName - The name of the event.\n   * @param {Object} [macros={}] - An optional Object of parameters(vast macros) to be used in the tracking calls.\n   * @param {Boolean} [once=false] - Boolean to define if the event has to be tracked only once.\n   *\n   */\n  track(eventName, { macros = {}, once = false } = {}) {\n    // closeLinear event was introduced in VAST 3.0\n    // Fallback to vast 2.0 close event if necessary\n    if (\n      eventName === 'closeLinear' &&\n      !this.trackingEvents[eventName] &&\n      this.trackingEvents['close']\n    ) {\n      eventName = 'close';\n    }\n\n    const trackingURLTemplates = this.trackingEvents[eventName];\n    const isAlwaysEmitEvent = this.emitAlwaysEvents.indexOf(eventName) > -1;\n\n    if (trackingURLTemplates) {\n      this.emit(eventName, { trackingURLTemplates });\n      this.trackURLs(trackingURLTemplates, macros);\n    } else if (isAlwaysEmitEvent) {\n      this.emit(eventName, null);\n    }\n\n    if (once) {\n      delete this.trackingEvents[eventName];\n      if (isAlwaysEmitEvent) {\n        this.emitAlwaysEvents.splice(\n          this.emitAlwaysEvents.indexOf(eventName),\n          1\n        );\n      }\n    }\n  }\n\n  /**\n   * Calls the tracking urls templates with the given macros .\n   *\n   * @param {Array} URLTemplates - An array of tracking url templates.\n   * @param {Object} [macros ={}] - An optional Object of parameters to be used in the tracking calls.\n   * @param {Object} [options={}] - An optional Object of options to be used in the tracking calls.\n   */\n  trackURLs(URLTemplates, macros = {}, options = {}) {\n    //Avoid mutating the object received in parameters.\n    const givenMacros = { ...macros };\n    if (this.linear) {\n      if (\n        this.creative &&\n        this.creative.mediaFiles &&\n        this.creative.mediaFiles[0] &&\n        this.creative.mediaFiles[0].fileURL\n      ) {\n        givenMacros['ASSETURI'] = this.creative.mediaFiles[0].fileURL;\n      }\n      if (this.progress) {\n        givenMacros['ADPLAYHEAD'] = this.progressFormatted();\n      }\n    }\n    if (\n      this.creative &&\n      this.creative.universalAdId &&\n      this.creative.universalAdId.idRegistry &&\n      this.creative.universalAdId.value\n    ) {\n      givenMacros[\n        'UNIVERSALADID'\n      ] = `${this.creative.universalAdId.idRegistry} ${this.creative.universalAdId.value}`;\n    }\n\n    if (this.ad) {\n      if (this.ad.sequence) {\n        givenMacros['PODSEQUENCE'] = this.ad.sequence;\n      }\n      if (this.ad.adType) {\n        givenMacros['ADTYPE'] = this.ad.adType;\n      }\n      if (this.ad.adServingId) {\n        givenMacros['ADSERVINGID'] = this.ad.adServingId;\n      }\n      if (this.ad.categories && this.ad.categories.length) {\n        givenMacros['ADCATEGORIES'] = this.ad.categories\n          .map((categorie) => categorie.value)\n          .join(',');\n      }\n      if (this.ad.blockedAdCategories && this.ad.blockedAdCategories.length) {\n        givenMacros['BLOCKEDADCATEGORIES'] = this.ad.blockedAdCategories;\n      }\n    }\n\n    _util_util__WEBPACK_IMPORTED_MODULE_4__.util.track(URLTemplates, givenMacros, options);\n  }\n\n  /**\n   * Formats time in seconds to VAST timecode (e.g. 00:00:10.000)\n   *\n   * @param {Number} timeInSeconds - Number in seconds\n   * @return {String}\n   */\n  convertToTimecode(timeInSeconds) {\n    const progress = timeInSeconds * 1000;\n    const hours = Math.floor(progress / (60 * 60 * 1000));\n    const minutes = Math.floor((progress / (60 * 1000)) % 60);\n    const seconds = Math.floor((progress / 1000) % 60);\n    const milliseconds = Math.floor(progress % 1000);\n    return `${_util_util__WEBPACK_IMPORTED_MODULE_4__.util.leftpad(hours, 2)}:${_util_util__WEBPACK_IMPORTED_MODULE_4__.util.leftpad(\n      minutes,\n      2\n    )}:${_util_util__WEBPACK_IMPORTED_MODULE_4__.util.leftpad(seconds, 2)}.${_util_util__WEBPACK_IMPORTED_MODULE_4__.util.leftpad(milliseconds, 3)}`;\n  }\n\n  /**\n   * Formats time progress in a readable string.\n   *\n   * @return {String}\n   */\n  progressFormatted() {\n    return this.convertToTimecode(this.progress);\n  }\n}\n\n\n//# sourceURL=webpack://weavo/./node_modules/vast-client/src/vast_tracker.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AdsManager\": () => (/* binding */ AdsManager)\n/* harmony export */ });\n/* harmony import */ var vast_client_src__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vast-client/src */ \"./node_modules/vast-client/src/index.js\");\n\n\nvar AdsManager = function(adContainer) {\n\n    console.log('HERE', adContainer);\n\n    // Ad Container\n    this._adContainer = adContainer;\n\n    // Slot\n    this._slot = null;\n    // Video Slot\n    this._videoSlot = null;\n    // Create Video Slot\n    //this.createVideoSlot();\n\n    // Create Slot\n    this.createSlot();\n\n    this.EVENTS = {\n        AdsManagerLoaded: \"AdsManagerLoaded\", // After success ad request, when vast xml is parsed and ready\n        AdStarted: \"AdStarted\", //\n        AdStopped: \"AdStopped\", //\n        AdSkipped: \"AdSkipped\", //\n        AdLoaded: \"AdLoaded\", //\n        AdLinearChange: \"AdLinearChange\",\n        AdSizeChange: \"AdSizeChange\",\n        AdExpandedChange: \"AdExpandedChange\",\n        AdSkippableStateChange: \"AdSkippableStateChange\",\n        AdDurationChange: \"AdDurationChange\",\n        AdRemainingTimeChange: \"AdRemainingTimeChange\",\n        AdVolumeChange: \"AdVolumeChange\",\n        AdImpression: \"AdImpression\", //\n        AdClickThru: \"AdClickThru\",\n        AdInteraction: \"AdInteraction\",\n        AdVideoStart: \"AdVideoStart\", //\n        AdVideoFirstQuartile: \"AdVideoFirstQuartile\", //\n        AdVideoMidpoint: \"AdVideoMidpoint\", //\n        AdVideoThirdQuartile: \"AdVideoThirdQuartile\", //\n        AdVideoComplete: \"AdVideoComplete\", //\n        AdUserAcceptInvitation: \"AdUserAcceptInvitation\",\n        AdUserMinimize: \"AdUserMinimize\",\n        AdUserClose: \"AdUserClose\",\n        AdPaused: \"AdPaused\",\n        AdPlaying: \"AdPlaying\",\n        AdError: \"AdError\",\n        AdLog: \"AdLog\",\n        AllAdsCompleted: \"AllAdsCompleted\" // After all ads completed, vast, vpaid, vmap\n    };\n    this._eventCallbacks = {};\n    this._creativeEventCallbacks = {};\n\n    this._attributes = {\n        width : 300,\n        height : 154,\n        viewMode : 'normal',\n        desiredBitrate : 268,\n        duration : 10,\n        remainingTime : 10,\n        currentTime : 0\n    }\n\n    this._vastClient = null;\n    this._vastTracker = null;\n\n    this._ad = null;\n    this._creative = null;\n    this._mediaFiles = null;\n    this._mediaFileIndex = 0;\n    this._mediaFile = null;\n\n    this._isVPAID = false;\n    this._vpaidCreative = null;\n    this._vpaidProgressCounter = null;\n\n    this.SUPPORTED_CREATIVE_VPAID_VERSION_MIN = 2;\n\n    this._nextQuartileIndex = 0;\n    this._hasImpression = false;\n    this._hasStarted = false;\n}\nAdsManager.prototype.createSlot = function() {\n    this._slot = document.createElement('div');\n    this._slot.style.position = 'absolute';\n    this._slot.style.display = 'none';\n    this._adContainer.appendChild(this._slot);\n    this.createVideoSlot();\n}\nAdsManager.prototype.removeSlot = function() {\n    this._slot.parentNode.removeChild(this._slot);\n    this.createSlot();\n}\nAdsManager.prototype.showSlot = function() {\n    console.log('show slot');\n    // Check if video slot has src, if no then hide video slot\n    if(this._videoSlot.src === '') {\n        this.hideVideoSlot();\n    }\n    // Show slot\n    this._slot.style.display = 'block';\n}\nAdsManager.prototype.resizeSlot = function(width, height) {\n    this._slot.style.width = width + 'px';\n    this._slot.style.height = height + 'px';\n}\nAdsManager.prototype.createVideoSlot = function() {\n    this._videoSlot = document.createElement('video');\n    this._videoSlot.setAttribute('webkit-playsinline', true);\n    this._videoSlot.setAttribute('playsinline', true);\n    //this._videoSlot.setAttribute('preload', 'none');\n    this._videoSlot.style.width = '100%';\n    this._videoSlot.style.height = '100%';\n    this._videoSlot.style.backgroundColor = 'rgb(0, 0, 0)';\n    //this._adContainer.appendChild(this._videoSlot);\n    this._slot.appendChild(this._videoSlot);\n}\nAdsManager.prototype.hideVideoSlot = function() {\n    this._videoSlot.style.display = 'none';\n}\n/*\nAdsManager.prototype.removeVideoSlot = function() {\n    this._videoSlot.parentNode.removeChild(this._videoSlot);\n    this.createVideoSlot();\n}\n */\nAdsManager.prototype.updateVPAIDProgress = function() {\n    // Check remaining time\n    this._attributes.remainingTime = this._isCreativeFunctionInvokable(\"getAdRemainingTime\") ? this._vpaidCreative.getAdRemainingTime() : -1;\n    console.log('getAdRemainingTime', this._attributes.remainingTime);\n    if(!isNaN(this._attributes.remainingTime) && this._attributes.remainingTime != 1) {\n        this._attributes.currentTime = this._attributes.duration - this._attributes.remainingTime;\n        // Track progress\n        this._vastTracker.setProgress(this._attributes.currentTime);\n    }\n}\nAdsManager.prototype.startVPAIDProgress = function() {\n    var that = this;\n    console.log('start vpaid progress');\n    if(this._vpaidProgressCounter) {\n        clearInterval(this._vpaidProgressCounter);\n        this._vpaidProgressCounter = null;\n    }\n    this._vpaidProgressCounter = setInterval(function() {\n        if(that._isVPAID && that._vpaidCreative && that._vastTracker) {\n            that.updateVPAIDProgress();\n        } else {\n            console.log('stop VPAID progress');\n            that.stopVPAIDProgress();\n        }\n    }, 1000);\n}\nAdsManager.prototype.stopVPAIDProgress = function() {\n    console.log('stop VPAID progress > executed');\n    if(this._vpaidProgressCounter) {\n        clearInterval(this._vpaidProgressCounter);\n        this._vpaidProgressCounter = null;\n    }\n}\nAdsManager.prototype.addEventListener = function(eventName, callback, context) {\n    console.log('subscribe for event', eventName);\n    var givenCallback = callback.bind(context);\n    this._eventCallbacks[eventName] = givenCallback;\n}\nAdsManager.prototype.removeEventListener = function(eventName) {\n    this._eventCallbacks[eventName] = null;\n}\nAdsManager.prototype.onAdsManagerLoaded = function() {\n    console.log('onAdsManagerLoaded');\n    if (this.EVENTS.AdsManagerLoaded in this._eventCallbacks) {\n        if(typeof this._eventCallbacks[this.EVENTS.AdsManagerLoaded] === 'function') {\n            this._eventCallbacks[this.EVENTS.AdsManagerLoaded]();\n        }\n    }\n}\nAdsManager.prototype.onAdLoaded = function() {\n    console.log('onAdLoaded', this._creative);\n    if (this.EVENTS.AdLoaded in this._eventCallbacks) {\n        if(typeof this._eventCallbacks[this.EVENTS.AdLoaded] === 'function') {\n            this._eventCallbacks[this.EVENTS.AdLoaded](this._creative);\n        }\n    }\n}\nAdsManager.prototype.onAdDurationChange = function() {\n    console.log('onAdDurationChange');\n    if(this._isVPAID && this._vpaidCreative && this._vastTracker) {\n        this._attributes.duration = this._isCreativeFunctionInvokable(\"getAdDuration\") ? this._vpaidCreative.getAdDuration() : -1;\n        console.log('update tracker with new duration', this._attributes.duration);\n        if(this._attributes.duration != -1) {\n            this._vastTracker.setDuration(this._attributes.duration);\n        }\n    }\n    if (this.EVENTS.AdDurationChange in this._eventCallbacks) {\n        if(typeof this._eventCallbacks[this.EVENTS.AdDurationChange] === 'function') {\n            this._eventCallbacks[this.EVENTS.AdDurationChange]();\n        }\n    }\n}\nAdsManager.prototype.onAdSizeChange = function() {\n    console.log('onAdSizeChange');\n    if (this.EVENTS.AdSizeChange in this._eventCallbacks) {\n        if(typeof this._eventCallbacks[this.EVENTS.AdSizeChange] === 'function') {\n            this._eventCallbacks[this.EVENTS.AdSizeChange]();\n        }\n    }\n}\nAdsManager.prototype.onAdStarted = function() {\n    console.log('onAdStarted', this._videoSlot.src);\n    // Show ad slot\n    this.showSlot();\n\n    if (this.EVENTS.AdStarted in this._eventCallbacks) {\n        if(typeof this._eventCallbacks[this.EVENTS.AdStarted] === 'function') {\n            this._eventCallbacks[this.EVENTS.AdStarted]();\n        }\n    }\n}\nAdsManager.prototype.onAdVideoStart = function() {\n    console.log('onAdVideoStart');\n    if(this._isVPAID && this._vpaidCreative && this._vastTracker) {\n        this.updateVPAIDProgress();\n    }\n    if (this.EVENTS.AdVideoStart in this._eventCallbacks) {\n        if(typeof this._eventCallbacks[this.EVENTS.AdVideoStart] === 'function') {\n            this._eventCallbacks[this.EVENTS.AdVideoStart]();\n        }\n    }\n}\nAdsManager.prototype.onAdStopped = function() {\n    console.log('onAdStopped > remove ad from UI');\n    if (this.EVENTS.AdStopped in this._eventCallbacks) {\n        if(typeof this._eventCallbacks[this.EVENTS.AdStopped] === 'function') {\n            this._eventCallbacks[this.EVENTS.AdStopped]();\n        }\n    }\n    // Then destroy ad, unsubscribe and e.t.c\n    this.destroyAd();\n}\nAdsManager.prototype.onAdSkipped = function() {\n    console.log('onAdSkipped');\n    if (this.EVENTS.AdSkipped in this._eventCallbacks) {\n        if(typeof this._eventCallbacks[this.EVENTS.AdSkipped] === 'function') {\n            this._eventCallbacks[this.EVENTS.AdSkipped]();\n        }\n    }\n    // Then destroy ad, unsubscribe and e.t.c\n    this.destroyAd();\n}\nAdsManager.prototype.onAdVolumeChange = function() {\n    console.log('onAdVolumeChange');\n    if (this.EVENTS.AdVolumeChange in this._eventCallbacks) {\n        if(typeof this._eventCallbacks[this.EVENTS.AdVolumeChange] === 'function') {\n            this._eventCallbacks[this.EVENTS.AdVolumeChange]();\n        }\n    }\n}\nAdsManager.prototype.onAdImpression = function() {\n    console.log('onAdImpression');\n    if(this._isVPAID && this._vpaidCreative && this._vastTracker) {\n        if (!this._hasImpression) {\n            // Check duration\n            this._attributes.duration = this._isCreativeFunctionInvokable(\"getAdDuration\") ? this._vpaidCreative.getAdDuration() : -1;\n            console.log('update tracker with new duration', this._attributes.duration);\n            if(this._attributes.duration != -1) {\n                this._vastTracker.setDuration(this._attributes.duration);\n            }\n            /*\n            // Check remaining time\n            this._attributes.remainingTime = this._isCreativeFunctionInvokable(\"getAdRemainingTime\") ? this._vpaidCreative.getAdRemainingTime() : -1;\n            console.log('update tracker with new remainingTime', this._attributes.remainingTime);\n            console.log('update tracker with new duration', this._attributes.duration);\n             */\n            // Track impression\n            this._vastTracker.trackImpression();\n\n            // Start VPAID process\n            this.startVPAIDProgress();\n\n            this._hasImpression = true;\n        }\n    }\n    if (this.EVENTS.AdImpression in this._eventCallbacks) {\n        if(typeof this._eventCallbacks[this.EVENTS.AdImpression] === 'function') {\n            this._eventCallbacks[this.EVENTS.AdImpression]();\n        }\n    }\n}\nAdsManager.prototype.onAdClickThru = function(url, id, playerHandles) {\n    // TODO:\n    console.log('onAdClickThru', url, id, playerHandles);\n    if(this._isVPAID && this._vpaidCreative && this._vastTracker) {\n        this._vastTracker.click();\n    }\n    if (this.EVENTS.AdClickThru in this._eventCallbacks) {\n        if(typeof this._eventCallbacks[this.EVENTS.AdClickThru] === 'function') {\n            this._eventCallbacks[this.EVENTS.AdClickThru](url, id, playerHandles);\n        }\n    }\n}\nAdsManager.prototype.onAdVideoFirstQuartile = function() {\n    console.log('onAdVideoFirstQuartile');\n    if(this._isVPAID && this._vpaidCreative && this._vastTracker) {\n        this.updateVPAIDProgress();\n    }\n    if (this.EVENTS.AdVideoFirstQuartile in this._eventCallbacks) {\n        if(typeof this._eventCallbacks[this.EVENTS.AdVideoFirstQuartile] === 'function') {\n            this._eventCallbacks[this.EVENTS.AdVideoFirstQuartile]();\n        }\n    }\n};\nAdsManager.prototype.onAdVideoMidpoint = function() {\n    console.log('onAdVideoMidpoint');\n    if(this._isVPAID && this._vpaidCreative && this._vastTracker) {\n        this.updateVPAIDProgress();\n    }\n    if (this.EVENTS.AdVideoMidpoint in this._eventCallbacks) {\n        if(typeof this._eventCallbacks[this.EVENTS.AdVideoMidpoint] === 'function') {\n            this._eventCallbacks[this.EVENTS.AdVideoMidpoint]();\n        }\n    }\n};\nAdsManager.prototype.onAdVideoThirdQuartile = function() {\n    console.log('onAdVideoThirdQuartile');\n    if(this._isVPAID && this._vpaidCreative && this._vastTracker) {\n        this.updateVPAIDProgress();\n    }\n    if (this.EVENTS.AdVideoThirdQuartile in this._eventCallbacks) {\n        if(typeof this._eventCallbacks[this.EVENTS.AdVideoThirdQuartile] === 'function') {\n            this._eventCallbacks[this.EVENTS.AdVideoThirdQuartile]();\n        }\n    }\n};\nAdsManager.prototype.onAdPaused = function() {\n    console.log('onAdPaused');\n    if(this._vastTracker) {\n        this._vastTracker.setPaused(true);\n    }\n    if (this.EVENTS.AdPaused in this._eventCallbacks) {\n        if(typeof this._eventCallbacks[this.EVENTS.AdPaused] === 'function') {\n            this._eventCallbacks[this.EVENTS.AdPaused]();\n        }\n    }\n};\nAdsManager.prototype.onAdPlaying = function() {\n    console.log('onAdPlaying');\n    if(this._vastTracker) {\n        this._vastTracker.setPaused(false);\n    }\n    if (this.EVENTS.AdPlaying in this._eventCallbacks) {\n        if(typeof this._eventCallbacks[this.EVENTS.AdPlaying] === 'function') {\n            this._eventCallbacks[this.EVENTS.AdPlaying]();\n        }\n    }\n};\nAdsManager.prototype.onAdVideoComplete = function() {\n    console.log('onAdVideoComplete');\n    if(this._isVPAID && this._vpaidCreative && this._vastTracker) {\n        this._vastTracker.complete();\n    }\n    if (this.EVENTS.AdVideoComplete in this._eventCallbacks) {\n        if(typeof this._eventCallbacks[this.EVENTS.AdVideoComplete] === 'function') {\n            this._eventCallbacks[this.EVENTS.AdVideoComplete]();\n        }\n    }\n}\nAdsManager.prototype.onAllAdsCompleted = function() {\n    console.log('onAllAdsCompleted');\n    if (this.EVENTS.AllAdsCompleted in this._eventCallbacks) {\n        if(typeof this._eventCallbacks[this.EVENTS.AllAdsCompleted] === 'function') {\n            this._eventCallbacks[this.EVENTS.AllAdsCompleted]();\n        }\n    }\n}\nAdsManager.prototype.onAdError = function(message) {\n    console.log('onAdError', message);\n    if (this.EVENTS.AdError in this._eventCallbacks) {\n        if(typeof this._eventCallbacks[this.EVENTS.AdError] === 'function') {\n            this._eventCallbacks[this.EVENTS.AdError](message);\n        }\n    }\n}\nAdsManager.prototype.onAdLog = function(message) {\n    console.log('onAdLog');\n    if (this.EVENTS.AdLog in this._eventCallbacks) {\n        if(typeof this._eventCallbacks[this.EVENTS.AdLog] === 'function') {\n            this._eventCallbacks[this.EVENTS.AdLog](message);\n        }\n    }\n}\nAdsManager.prototype.requestAds = function(vastUrl, options = {}) {\n\n    // destroy\n    this.destroy();\n\n    console.log('request ads', vastUrl);\n\n    var that = this;\n    this._vastClient = new vast_client_src__WEBPACK_IMPORTED_MODULE_0__.VASTClient();\n    this._vastClient\n        .get(vastUrl, options)\n        .then(res => {\n\n            console.log(res);\n            var ads = res.ads;\n            if(ads.length != 0) {\n                console.log('ads length', ads.length);\n                if(ads.length > 1) {\n                    // Ad pod\n                    console.log('AdsManagerLoaded > ad pod');\n                    that.onAdsManagerLoaded();\n                } else {\n                    // Ad\n                    console.log(that._videoSlot, ads[0]);\n\n                    that._ad = ads[0];\n                    // Filter linear creatives, get first\n                    that._creative = ads[0].creatives.filter(creative => creative.type === 'linear')[0];\n                    // Check if creative has media files\n                    if(that._creative && that._creative.mediaFiles.length != 0) {\n\n                        console.log('is linear creative ? > YES', that._creative);\n                        // Filter and check media files for mime type canPlay and if VPAID or not\n                        that._mediaFiles = that._creative.mediaFiles.filter(mediaFile => {\n                            // mime types -> mp4, webm, ogg\n                            if(that.canPlayVideoType(mediaFile.mimeType)) {\n                                console.log('can play', mediaFile);\n                                return mediaFile;\n                            } else if(mediaFile.mimeType === 'application/javascript') {\n                                // apiFramework -> mime type -> application/javascript\n                                console.log('can play -> vpaid', mediaFile);\n                                return mediaFile;\n                            }\n                        });//[0]; // take the first one\n\n                        // Sort media files by size\n                        that._mediaFiles.sort(function(a, b) {\n                            var aHeight = a.height;\n                            var bHeight = b.height;\n                            return (aHeight < bHeight) ? -1 : (aHeight > bHeight) ? 1 : 0;\n                        });\n\n                        console.log('sorted media files', that._mediaFiles);\n\n                        if(that._mediaFiles && that._mediaFiles.length != 0) {\n                            // TODO: move after adLoaded\n                            // Init VAST Tracker for tracking events\n                            that._vastTracker = new vast_client_src__WEBPACK_IMPORTED_MODULE_0__.VASTTracker(that._vastClient, that._ad, that._creative);\n                            that._vastTracker.load();\n\n                            // If not VPAID dispatch AdsManagerLoaded event -> ad is ready for init\n                            that.onAdsManagerLoaded();\n                        } else {\n                            console.log('no media compatible files');\n                        }\n\n                    } else {\n                        console.log('NOT LINEAR');\n                    }\n                }\n\n            } else {\n                // TODO:\n                that.onAdError('The VAST response document is empty.');\n            }\n\n        })\n        .catch(err => {\n            console.log(err);\n            that.onAdError(err.message);\n        });\n\n}\nAdsManager.prototype.canPlayVideoType = function(mimeType) {\n    if(mimeType === 'video/webm' && this.supportsWebmVideo()) {\n        return true;\n    } else if(mimeType === 'video/ogg' && this.supportsOggTheoraVideo()) {\n        return true;\n    } else if(mimeType === 'video/mp4' && this.supportsH264BaselineVideo()) {\n        return true;\n    }\n    return false;\n}\nAdsManager.prototype.supportsVideo = function() {\n    return !!document.createElement('video').canPlayType;\n}\nAdsManager.prototype.supportsH264BaselineVideo = function() {\n    if(!this.supportsVideo()) return false;\n    var video = document.createElement('video');\n    return video.canPlayType('video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"');\n}\nAdsManager.prototype.supportsOggTheoraVideo = function() {\n    if(!this.supportsVideo()) return false;\n    var video = document.createElement('video');\n    return video.canPlayType('video/ogg; codecs=\"theora, vorbis\"');\n}\nAdsManager.prototype.supportsWebmVideo = function() {\n    if(!this.supportsVideo()) return false;\n    var video = document.createElement('video');\n    return video.canPlayType('video/webm; codecs=\"vp8, vorbis\"');\n}\nAdsManager.prototype.handshakeVersion = function(version) {\n    console.log('VPAID Creative: handshakeVersion(' + version + ')');\n    return this._vpaidCreative.handshakeVersion(version);\n}\nAdsManager.prototype._isCreativeFunctionInvokable = function(a) {\n    return this._vpaidCreative ? (a = this._vpaidCreative[a]) && typeof a === 'function' : false;\n}\nAdsManager.prototype.checkVPAIDInterface = function(a) {\n    for (var b = { passed: true, missingInterfaces: ''}, d = a.length - 1; 0 <= d; d--)\n        this._isCreativeFunctionInvokable(a[d]) || (b.passed = false, b.missingInterfaces += a[d] + ' ');\n    return b;\n}\nAdsManager.prototype.setCallbacksForCreative = function(eventCallbacks, context) {\n    for (var event in eventCallbacks) eventCallbacks.hasOwnProperty(event) && this._vpaidCreative.subscribe(eventCallbacks[event], event, context)\n}\nAdsManager.prototype.removeCallbacksForCreative = function(eventCallbacks) {\n    for (var event in eventCallbacks) {\n        console.log('removeCallback', event);\n        eventCallbacks.hasOwnProperty(event) && this._vpaidCreative.unsubscribe(event); // && this._vpaidCreative.unsubscribe(eventCallbacks[event], event);\n    }\n}\nAdsManager.prototype.creativeAssetLoaded = function() {\n    console.log('creative asset loaded');\n    console.log(this._vpaidCreative);\n    console.log('check VPAID creative');\n    var that = this,\n        checkVPAIDMinVersion = function() {\n            console.log('check VPAID min version');\n            var c = that.handshakeVersion(that.SUPPORTED_CREATIVE_VPAID_VERSION_MIN.toFixed(1));\n            console.log('VPAID min version is', c);\n            return c ? parseFloat(c) < that.SUPPORTED_CREATIVE_VPAID_VERSION_MIN ? (that.onAdError('Only support creatives with VPAID version >= ' + that.SUPPORTED_CREATIVE_VPAID_VERSION_MIN.toFixed(1)), !1) : !0 : (that.onAdError('Cannot get VPAID version from the creative'), !1)\n        };\n    if (function() {\n        var c = that.checkVPAIDInterface('handshakeVersion initAd startAd stopAd subscribe unsubscribe getAdLinear'.split(' '));\n        c.passed || that.onAdError('Missing interfaces in the VPAID creative: ' + c.missingInterfaces);\n        return c.passed\n    }() && checkVPAIDMinVersion()) {\n\n        console.log('VPAID is OK');\n\n        that._creativeEventCallbacks = {\n            AdStarted: that.onAdStarted,\n            AdStopped: that.onAdStopped,\n            AdSkipped: that.onAdSkipped,\n            AdLoaded: that.onAdLoaded,\n            //AdLinearChange: that.onAdLinearChange,\n            AdSizeChange: that.onAdSizeChange,\n            //AdExpandedChange: that.onAdExpandedChange,\n            AdDurationChange: that.onAdDurationChange,\n            AdVolumeChange: that.onAdVolumeChange,\n            AdImpression: that.onAdImpression,\n            AdClickThru: that.onAdClickThru,\n            //AdInteraction: that.onAdInteraction,\n            AdVideoStart: that.onAdVideoStart,\n            AdVideoFirstQuartile: that.onAdVideoFirstQuartile,\n            AdVideoMidpoint: that.onAdVideoMidpoint,\n            AdVideoThirdQuartile: that.onAdVideoThirdQuartile,\n            AdVideoComplete: that.onAdVideoComplete,\n            //AdUserAcceptInvitation: that.onAdUserAcceptInvitation,\n            //AdUserMinimize: that.onAdUserMinimize,\n            //AdUserClose: that.onAdUserClose,\n            AdPaused: that.onAdPaused,\n            AdPlaying: that.onAdPlaying, // onAdResumed\n            AdError: that.onAdError,\n            AdLog: that.onAdLog\n        }\n\n        // Subscribe for VPAID events\n        console.log('subscribe for VPAID events');\n        that.setCallbacksForCreative(that._creativeEventCallbacks, that);\n\n        // Prepare for iniAd\n        var width = that._attributes.width; //that._videoSlot.clientWidth;\n        var height = that._attributes.height; // that._videoSlot.clientHeight;\n        var creativeData = {\n            AdParameters: that._creative.adParameters\n        };\n        var environmentVars = {\n            slot: that._slot,\n            videoSlot: that._videoSlot,\n            videoSlotCanAutoPlay: true\n        };\n        // iniAd(width, height, viewMode, desiredBitrate, creativeData, environmentVars)\n        console.log('vpaid initAd >', width, height, that._attributes.viewMode, that._attributes.desiredBitrate, creativeData, environmentVars);\n        that._vpaidCreative.initAd(width, height, that._attributes.viewMode, that._attributes.desiredBitrate, creativeData, environmentVars);\n\n    }\n}\nAdsManager.prototype.loadCreativeAsset = function(fileURL) {\n    console.log('load creative asset >', fileURL);\n    var vpaidIframe = document.getElementById('vpaidIframe'),\n        iframe = document.createElement('iframe');\n\n    iframe.id = 'vpaidIframe';\n    vpaidIframe == null ? document.body.appendChild(iframe) : document.body.replaceChild(iframe, vpaidIframe); // this._adContainer.appendChild(iframe) : this._adContainer.replaceChild(iframe, vpaidIframe);\n    iframe.width = 0;\n    iframe.height = 0;\n    iframe.style.display = \"none\";\n    iframe.setAttribute('allowfullscreen', '');\n    iframe.setAttribute('sandbox', 'allow-scripts allow-same-origin');\n    iframe.setAttribute('allow', \"autoplay;attribution-reporting;\");\n    iframe.tabIndex = -1;\n    iframe.contentWindow.document.open();\n    // CORS?\n    iframe.contentWindow.document.write('<script type=\"text/javascript\" src=\"' + fileURL + '\"> \\x3c/script>');\n    iframe.contentWindow.document.close();\n    var that = this;\n    this._loadIntervalTimer = setInterval(function() {\n        var VPAIDAd = document.getElementById(\"vpaidIframe\").contentWindow.getVPAIDAd;\n        VPAIDAd && typeof VPAIDAd === 'function' && (clearInterval(that._loadIntervalTimer), VPAIDAd = VPAIDAd(), typeof VPAIDAd === 'undefined' ? console.log('getVPAIDAd() returns undefined value') : VPAIDAd == null ? console.log('getVPAIDAd() returns null') : (that._vpaidCreative = VPAIDAd, that.creativeAssetLoaded()))\n    }, 200);\n\n}\nAdsManager.prototype.removeCreativeAsset = function() {\n    // Remove VPAID iframe\n    var vpaidIframe = document.getElementById('vpaidIframe');\n    if(vpaidIframe) {\n        vpaidIframe.parentNode.removeChild(vpaidIframe);\n    }\n}\nAdsManager.prototype.destroyAd = function() {\n\n    console.log('destroyAd');\n    /*\n    if(this._isVPAID) {\n        // Unsubscribe for VPAID events\n        console.log('unsubscribe for VPAID events');\n        this.removeCallbacksForCreative(this._creativeEventCallbacks);\n        this.removeCreativeAsset();\n    }\n    //this.removeVideoSlot();\n    this.removeSlot();\n\n    // Reset global variables to default values\n    this._isVPAID = false;\n\n    this._hasImpression = false;\n    this._hasStarted = false;\n\n    this._ad = null;\n    this._creative = null;\n    this._mediaFile = null;\n    this._vpaidCreative = null;\n    this._vastTracker = null;\n     */\n    this.destroy();\n\n    // Dispatch AllAdsCompleted\n    this.onAllAdsCompleted();\n}\nAdsManager.prototype.isCreativeExists = function() {\n    return this._creative && this._creative.mediaFiles.length != 0;\n}\nAdsManager.prototype.init = function(width, height, viewMode) {\n    console.log('init > ad', width, height, viewMode, this.isCreativeExists());\n\n    var that = this;\n    if(this.isCreativeExists()) {\n\n        // Find the best resolution for mediaFile\n        console.log('media files', this._mediaFiles);\n        this._mediaFileIndex = this._mediaFiles.findIndex(function(item) {\n            return item.height >= height\n        });\n\n        console.log('media file index is', this._mediaFileIndex);\n        if(this._mediaFileIndex != -1) {\n            this._mediaFile = this._mediaFiles[this._mediaFileIndex];\n        } else {\n            // Get the last from array\n            console.log('get the last');\n            this._mediaFile = this._mediaFiles[this._mediaFiles.length - 1];\n        }\n        console.log('media file is', this._mediaFile);\n        if(this._mediaFile) {\n            // Check if VPAID\n            if (this._mediaFile.mimeType === 'application/javascript') {\n                this._isVPAID = true;\n            }\n\n            console.log('is VPAID?', this._isVPAID);\n            console.log(this._mediaFile);\n\n            this._attributes.width = width;\n            this._attributes.height = height;\n            this._attributes.viewMode = viewMode;\n\n            // Resize slot\n            this.resizeSlot(this._attributes.width, this._attributes.height);\n\n            if(this._isVPAID) {\n                // VPAID\n                console.log('vpaid >>>>>>>>>>>>>> todo', this._mediaFile.fileURL);\n                console.log('ad is VPAID -> inject VPAID javascript of ad and validate for existing VPAID api functionality, the dispatch AdLoaded or AdError');\n                this.loadCreativeAsset(this._mediaFile.fileURL);\n            } else {\n                // regular\n                console.log('regular > set video slot src >', this._mediaFile.fileURL);\n                this._videoSlot.setAttribute('src', this._mediaFile.fileURL);\n\n                // Events\n                this._slot.addEventListener('click', function() {\n                    console.log('click');\n                    if(!that._isVPAID && that._vastTracker) {\n                        that._vastTracker.click();\n                    }\n                }, false);\n                this._videoSlot.addEventListener('canplay', function() {\n                    console.log('video slot can play');\n                }, false);\n                this._videoSlot.addEventListener('volumechange', function(event) {\n                    that._vastTracker && that._vastTracker.setMuted(event.target.muted);\n                }, false);\n                this._videoSlot.addEventListener('timeupdate', function(event) {\n                    if(that.isCreativeExists()) {\n                        var percentPlayed = event.target.currentTime * 100.0 / event.target.duration;\n                        if (percentPlayed >= 0) {\n                            if (!that._hasImpression) {\n                                that._vastTracker && that._vastTracker.trackImpression();\n                                that._hasImpression = true;\n                            }\n                        }\n                        that._vastTracker && that._vastTracker.setProgress(event.target.currentTime);\n                        if (event.target.duration > 0) {\n                            that._attributes.remainingTime = event.target.duration - event.target.currentTime;\n                        }\n                    }\n                }, true);\n                this._videoSlot.addEventListener('loadedmetadata', function(event) {\n                    console.log('LOADED META DATA', event.target.duration);\n                    that._attributes.duration = event.target.duration;\n                    // Update tracking duration with real media meta data\n                    that._vastTracker && that._vastTracker.setDuration(event.target.duration);\n                    if(!that._isVPAID) {\n                        that.onAdDurationChange();\n                    }\n                }, false);\n                this._videoSlot.addEventListener('ended', function() {\n                    // Complete\n                    console.log('video > ended');\n                    that._vastTracker && that._vastTracker.complete();\n                }, false);\n\n\n                this.onAdLoaded();\n            }\n\n            // Tracking\n            if(this._vastTracker) {\n\n                this._vastTracker.on('clickthrough', function (url) {\n                    console.log('click', url);\n                    if (!that._isVPAID) {\n                        that.onAdClickThru(url);\n                    }\n                    console.log('open window', url);\n                    // Open the resolved clickThrough url\n                    var opener = window.open(url, '_blank');\n                    void 0 !== opener ? opener.focus() : window.location.href = url;\n                });\n                this._vastTracker.on('creativeView', () => {\n                    console.log('creativeView -> impression');\n                    if (!that._isVPAID) {\n                        that.onAdImpression();\n                    }\n                });\n                this._vastTracker.on('start', () => {\n                    console.log('start');\n                    if (!that._isVPAID) {\n                        that.onAdVideoStart();\n                    }\n                });\n                this._vastTracker.on('firstQuartile', () => {\n                    console.log('firstQuartile');\n                    if (!that._isVPAID) {\n                        that.onAdVideoFirstQuartile();\n                    }\n                });\n                this._vastTracker.on('midpoint', () => {\n                    console.log('midpoint');\n                    if (!that._isVPAID) {\n                        that.onAdVideoMidpoint();\n                    }\n                });\n                this._vastTracker.on('thirdQuartile', () => {\n                    console.log('thirdQuartile');\n                    if (!that._isVPAID) {\n                        that.onAdVideoThirdQuartile();\n                    }\n                });\n                this._vastTracker.on('complete', () => {\n                    console.log('complete');\n                    if (!that._isVPAID) {\n                        that.onAdVideoComplete();\n                        that.onAdStopped();\n                    }\n                });\n            }\n\n        } else {\n            console.log('media file not found');\n        }\n\n    } else {\n        this.onAdError('');\n    }\n}\nAdsManager.prototype.start = function() {\n\n    console.log('start > ad');\n    var that = this;\n    if(this.isCreativeExists()) {\n        this._videoSlot.muted = true;\n\n        if (this._isVPAID && this._vpaidCreative) {\n            console.log('start > vpaid', this._isVPAID, this._vpaidCreative);\n            this._vpaidCreative.startAd();\n        } else {\n\n            //this._videoSlot.autoplay = true;\n            this._videoSlot.load();\n            this._videoSlot.play();\n\n            that.onAdStarted();\n        }\n    }\n}\nAdsManager.prototype.getDuration = function() {\n    return this.isCreativeExists() && this._attributes.duration;\n}\nAdsManager.prototype.pause = function() {\n    if(this.isCreativeExists()) {\n        if (this._isVPAID) {\n            this._isCreativeFunctionInvokable(\"pauseAd\") && this._vpaidCreative.pauseAd();\n        } else {\n            console.log('pause > video');\n            this._videoSlot.pause();\n            this.onAdPaused();\n        }\n    }\n}\nAdsManager.prototype.resume = function() {\n    if(this.isCreativeExists()) {\n        if (this._isVPAID) {\n            this._isCreativeFunctionInvokable(\"resumeAd\") && this._vpaidCreative.resumeAd();\n        } else {\n            console.log('resume > video');\n            this._videoSlot.play();\n            this.onAdPlaying();\n        }\n    }\n}\nAdsManager.prototype.stop = function() {\n    if(this.isCreativeExists()) {\n        if (this._isVPAID) {\n            this._vpaidCreative.stopAd();\n        } else {\n            this.onAdStopped();\n        }\n    }\n}\nAdsManager.prototype.skip = function() {\n    if(this.isCreativeExists()) {\n        if (this._isVPAID) {\n            this._isCreativeFunctionInvokable(\"skipAd\") && this._vpaidCreative.skipAd();\n        } else {\n            console.log('skip > video');\n            this.onAdSkipped();\n        }\n    }\n}\nAdsManager.prototype.resize = function(width, height, viewMode) {\n    if(this.isCreativeExists()) {\n\n        this._attributes.width = width;\n        this._attributes.height = height;\n        this._attributes.viewMode = viewMode;\n\n        // Resize slot\n        this.resizeSlot(this._attributes.width, this._attributes.height);\n\n        if (this._isVPAID && this._vpaidCreative) {\n            console.log('resize > vpaid', width, height, viewMode);\n            this._isCreativeFunctionInvokable(\"resizeAd\") && this._vpaidCreative.resizeAd(width, height, viewMode);\n        } else {\n            console.log('resize > video', width, height, viewMode);\n            this.onAdSizeChange();\n        }\n    }\n}\nAdsManager.prototype.getVolume = function() {\n    if(this.isCreativeExists()) {\n        if (this._isVPAID) {\n            return this._isCreativeFunctionInvokable(\"getAdVolume\") ? this._vpaidCreative.getAdVolume() : -1;\n        } else {\n            console.log('getVolume > video');\n        }\n    }\n}\nAdsManager.prototype.setVolume = function(value) {\n    if(this.isCreativeExists()) {\n        if (this._isVPAID) {\n            this._isCreativeFunctionInvokable(\"setAdVolume\") && this._vpaidCreative.setAdVolume(value);\n        } else {\n            console.log('setVolume > video');\n        }\n    }\n}\nAdsManager.prototype.getRemainingTime = function() {\n    if(this.isCreativeExists()) {\n        if (this._isVPAID) {\n            return this._isCreativeFunctionInvokable(\"getAdRemainingTime\") ? this._vpaidCreative.getAdRemainingTime() : -1\n        } else {\n            return this._attributes.remainingTime;\n        }\n    }\n}\nAdsManager.prototype.collapse = function() {\n    if(this.isCreativeExists()) {\n        // TODO:\n    }\n}\nAdsManager.prototype.expand = function() {\n    if(this.isCreativeExists()) {\n        // TODO:\n    }\n}\nAdsManager.prototype.destroy = function() {\n    if(this.isCreativeExists()) {\n        //this.destroyAd();\n    }\n    console.log('destroy');\n\n    if(this._isVPAID) {\n        // Unsubscribe for VPAID events\n        console.log('unsubscribe for VPAID events');\n        this.removeCallbacksForCreative(this._creativeEventCallbacks);\n        this.removeCreativeAsset();\n    }\n\n    // Reset global variables to default values\n    this._isVPAID = false;\n\n    this._hasImpression = false;\n    this._hasStarted = false;\n\n    this._ad = null;\n    this._creative = null;\n    this._mediaFile = null;\n    this._vpaidCreative = null;\n    this._vastTracker = null;\n\n    //this.removeVideoSlot();\n    console.log('remove slot');\n    this.removeSlot();\n\n}\n\n\n\n\n//# sourceURL=webpack://weavo/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	weavo = __webpack_exports__;
/******/ 	
/******/ })()
;